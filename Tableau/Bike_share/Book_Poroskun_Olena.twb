<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0806.1229                               -->
<workbook original-version='18.1' source-build='2023.1.5 (20231.23.0806.1229)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='bike_share' inline='true' name='federated.1okwhff1g2doca166aifb05qdn9k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bike_share' name='textscan.0lxzy2f0wpxtog16aa0jw1hseidb'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads' filename='bike_share.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0lxzy2f0wpxtog16aa0jw1hseidb' name='bike_share.csv' table='[bike_share#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='uk_UA'>
            <column datatype='integer' name='duration_sec' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss zzz' name='start_date' ordinal='1' />
            <column datatype='string' name='start_station_name' ordinal='2' />
            <column datatype='real' name='start_station_latitude' ordinal='3' />
            <column datatype='real' name='start_station_longitude' ordinal='4' />
            <column datatype='string' name='member_gender' ordinal='5' />
            <column datatype='string' name='subscriber_type' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0lxzy2f0wpxtog16aa0jw1hseidb' name='bike_share.csv' table='[bike_share#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='uk_UA'>
            <column datatype='integer' name='duration_sec' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss zzz' name='start_date' ordinal='1' />
            <column datatype='string' name='start_station_name' ordinal='2' />
            <column datatype='real' name='start_station_latitude' ordinal='3' />
            <column datatype='real' name='start_station_longitude' ordinal='4' />
            <column datatype='string' name='member_gender' ordinal='5' />
            <column datatype='string' name='subscriber_type' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;uk&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;โด&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='exponent-char'>&quot;ะต&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;uk_UA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LUK_RUA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_name]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>start_station_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LUK_RUA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_station_latitude]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>start_station_latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start_station_longitude]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>start_station_longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>member_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[member_gender]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>member_gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LUK_RUA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subscriber_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subscriber_type]</local-name>
            <parent-name>[bike_share.csv]</parent-name>
            <remote-alias>subscriber_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LUK_RUA' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='gender_count' datatype='integer' name='[Calculation_999236171369336832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([member_gender])' />
      </column>
      <column caption='Subscription_count' datatype='integer' name='[Calculation_999236171370385409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([subscriber_type])' />
      </column>
      <column caption='Ride_count' datatype='integer' name='[Calculation_999236171371044866]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([duration_sec])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='bike_share.csv' datatype='table' name='[__tableau_internal_object_id__].[bike_share.csv_E2B656E93259412F944DD1BEFF931630]' role='measure' type='quantitative' />
      <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
      <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[start_station_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[start_station_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
      <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))' hidden='true' name='[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:start_date:ok]' />
          <groupfilter function='level-members' level='[qr:start_date:ok]' />
          <groupfilter function='level-members' level='[mn:start_date:ok]' />
          <groupfilter function='level-members' level='[dy:start_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (member_gender)' hidden='true' name='[Action (member_gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[member_gender]' />
        </groupfilter>
      </group>
      <group caption='Action (subscriber_type)' hidden='true' name='[Action (subscriber_type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[subscriber_type]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Admin/Documents/My Tableau Repository/Datasources/bike_share.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2023 06:43:39 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='bike_share' increment-value='%null%' refresh-type='create' rows-inserted='863113' timestamp-start='2023-09-25 06:43:36.767' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>duration_sec</remote-name>
              <remote-type>20</remote-type>
              <local-name>[duration_sec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration_sec</remote-alias>
              <ordinal>0</ordinal>
              <family>bike_share.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7717</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[start_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_date</remote-alias>
              <ordinal>1</ordinal>
              <family>bike_share.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>863113</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_name</remote-alias>
              <ordinal>2</ordinal>
              <family>bike_share.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LUK_RUA' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_station_latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>bike_share.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>544</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start_station_longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start_station_longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start_station_longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>bike_share.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>544</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>member_gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[member_gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>member_gender</remote-alias>
              <ordinal>5</ordinal>
              <family>bike_share.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LUK_RUA' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subscriber_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subscriber_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>subscriber_type</remote-alias>
              <ordinal>6</ordinal>
              <family>bike_share.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LUK_RUA' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bike_share.csv_E2B656E93259412F944DD1BEFF931630]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ukraine&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bike_share.csv' id='bike_share.csv_E2B656E93259412F944DD1BEFF931630'>
            <properties context=''>
              <relation connection='textscan.0lxzy2f0wpxtog16aa0jw1hseidb' name='bike_share.csv' table='[bike_share#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='uk_UA'>
                  <column datatype='integer' name='duration_sec' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss zzz' name='start_date' ordinal='1' />
                  <column datatype='string' name='start_station_name' ordinal='2' />
                  <column datatype='real' name='start_station_latitude' ordinal='3' />
                  <column datatype='real' name='start_station_longitude' ordinal='4' />
                  <column datatype='string' name='member_gender' ordinal='5' />
                  <column datatype='string' name='subscriber_type' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike_share' type='sheet' worksheet='Gender' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bike_share' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_4D72B899D2154462AD9E881AD9CD56E6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike_share' type='sheet' worksheet='Subscribers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bike_share' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_29A4AF97861B474295516D5EFF74FF43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike_share' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bike_share' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_3B62B4B92CC44BABB767B8075CF9677C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike_share' type='sheet' worksheet='Rides' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bike_share' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_F5EF9B8A9A2A420CB13B42389DAF3A2E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike_share' type='sheet' worksheet='Top_station' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Bike_share' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Ride_count' datatype='integer' name='[Calculation_999236171371044866]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([duration_sec])' />
            </column>
            <column datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[duration_sec]' derivation='None' name='[none:duration_sec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171371044866]' derivation='User' name='[usr:Calculation_999236171371044866:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3B62B4B92CC44BABB767B8075CF9677C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[mn:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[mn:start_date:ok]' member='3' />
                      </groupfilter>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:start_date:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:start_date:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]'>
            <groupfilter function='level-members' level='[member_gender]' user:ui-action-filter='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]'>
            <groupfilter function='level-members' level='[subscriber_type]' user:ui-action-filter='[Action2_4D72B899D2154462AD9E881AD9CD56E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]</rows>
        <cols>[federated.1okwhff1g2doca166aifb05qdn9k].[none:duration_sec:qk]</cols>
      </table>
      <simple-id uuid='{D4BF243B-282F-4BB3-9F02-860187C41C51}' />
    </worksheet>
    <worksheet name='Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='gender_count' datatype='integer' name='[Calculation_999236171369336832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([member_gender])' />
            </column>
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[member_gender]' derivation='None' name='[none:member_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171369336832]' derivation='User' name='[usr:Calculation_999236171369336832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3B62B4B92CC44BABB767B8075CF9677C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[mn:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[mn:start_date:ok]' member='3' />
                      </groupfilter>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:start_date:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:start_date:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]'>
            <groupfilter function='level-members' level='[subscriber_type]' user:ui-action-filter='[Action2_4D72B899D2154462AD9E881AD9CD56E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' />
              <wedge-size column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171369336832:qk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171369336832:qk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4DC25CF-3E12-40AB-B540-BB48153AA50B}' />
    </worksheet>
    <worksheet name='Gender_bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='gender_count' datatype='integer' name='[Calculation_999236171369336832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([member_gender])' />
            </column>
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[member_gender]' derivation='None' name='[none:member_gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_999236171369336832]' derivation='User' name='[usr:Calculation_999236171369336832:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171369336832:qk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171369336832:qk]</rows>
        <cols>[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]</cols>
      </table>
      <simple-id uuid='{1ED35B1A-C630-4BC7-9079-8245BEBEE9D1}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Ride_count' datatype='integer' name='[Calculation_999236171371044866]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([duration_sec])' />
            </column>
            <column datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_latitude]' derivation='None' name='[none:start_station_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_station_longitude]' derivation='None' name='[none:start_station_longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[start_station_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[start_station_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171371044866]' derivation='User' name='[usr:Calculation_999236171371044866:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3B62B4B92CC44BABB767B8075CF9677C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[mn:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[mn:start_date:ok]' member='3' />
                      </groupfilter>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:start_date:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:start_date:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]'>
            <groupfilter function='level-members' level='[member_gender]' user:ui-action-filter='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]'>
            <groupfilter function='level-members' level='[subscriber_type]' user:ui-action-filter='[Action2_4D72B899D2154462AD9E881AD9CD56E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_longitude:qk]' field-type='quantitative' max='-13536046.517324571' min='-13646085.963824179' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_latitude:qk]' field-type='quantitative' max='4620761.6557775028' min='4456785.5509299422' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_latitude:qk]</rows>
        <cols>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_longitude:qk]</cols>
      </table>
      <simple-id uuid='{0BF5D167-48A3-4782-915D-9B923352EF2D}' />
    </worksheet>
    <worksheet name='Rides'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Ride_count' datatype='integer' name='[Calculation_999236171371044866]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([duration_sec])' />
            </column>
            <column datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171371044866]' derivation='User' name='[usr:Calculation_999236171371044866:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]'>
            <groupfilter function='level-members' level='[member_gender]' user:ui-action-filter='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]'>
            <groupfilter function='level-members' level='[subscriber_type]' user:ui-action-filter='[Action2_4D72B899D2154462AD9E881AD9CD56E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]</rows>
        <cols>([federated.1okwhff1g2doca166aifb05qdn9k].[yr:start_date:ok] / ([federated.1okwhff1g2doca166aifb05qdn9k].[qr:start_date:ok] / ([federated.1okwhff1g2doca166aifb05qdn9k].[mn:start_date:ok] / [federated.1okwhff1g2doca166aifb05qdn9k].[dy:start_date:ok])))</cols>
      </table>
      <simple-id uuid='{D4699FDF-C42F-4E0E-BEA9-74BF3AC8B826}' />
    </worksheet>
    <worksheet name='Subscribers'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Subscription_count' datatype='integer' name='[Calculation_999236171370385409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([subscriber_type])' />
            </column>
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[subscriber_type]' derivation='None' name='[none:subscriber_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171370385409]' derivation='User' name='[usr:Calculation_999236171370385409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3B62B4B92CC44BABB767B8075CF9677C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[mn:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[mn:start_date:ok]' member='3' />
                      </groupfilter>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:start_date:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:start_date:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]'>
            <groupfilter function='level-members' level='[member_gender]' user:ui-action-filter='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]' />
              <wedge-size column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171370385409:qk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171370385409:qk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{96CBB828-AC1E-441D-8640-22095A1AE5F6}' />
    </worksheet>
    <worksheet name='Subscribers_bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Subscription_count' datatype='integer' name='[Calculation_999236171370385409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([subscriber_type])' />
            </column>
            <column-instance column='[subscriber_type]' derivation='None' name='[none:subscriber_type:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171370385409]' derivation='User' name='[usr:Calculation_999236171370385409:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]' />
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171370385409:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171370385409:qk]</rows>
        <cols>[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]</cols>
      </table>
      <simple-id uuid='{52F26B53-61A6-43CC-9E6C-DD3ED0EA6243}' />
    </worksheet>
    <worksheet name='Top_station'>
      <table>
        <view>
          <datasources>
            <datasource caption='bike_share' name='federated.1okwhff1g2doca166aifb05qdn9k' />
          </datasources>
          <datasource-dependencies datasource='federated.1okwhff1g2doca166aifb05qdn9k'>
            <column caption='Ride_count' datatype='integer' name='[Calculation_999236171371044866]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([duration_sec])' />
            </column>
            <column datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Day' name='[dy:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[member_gender]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_station_name]' derivation='None' name='[none:start_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[start_date]' derivation='Quarter' name='[qr:start_date:ok]' pivot='key' type='ordinal' />
            <column datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
            <column datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_999236171371044866]' derivation='User' name='[usr:Calculation_999236171371044866:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_3B62B4B92CC44BABB767B8075CF9677C]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2018' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[mn:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[mn:start_date:ok]' member='3' />
                      </groupfilter>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='31' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[mn:start_date:ok]' member='2' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                        <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[qr:start_date:ok]' member='2' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[mn:start_date:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[dy:start_date:ok]' member='1' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='2' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='3' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='4' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='5' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='6' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='7' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='8' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='9' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='10' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='11' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='12' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='13' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='14' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='15' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='16' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='17' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='18' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='19' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='20' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='21' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='22' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='23' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='24' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='25' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='26' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='27' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='28' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='29' />
                      <groupfilter function='member' level='[dy:start_date:ok]' member='30' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]'>
            <groupfilter function='level-members' level='[member_gender]' user:ui-action-filter='[Action1_3F9CE86A37FE4296AD80ACE9BADB8955]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]'>
            <groupfilter function='level-members' level='[subscriber_type]' user:ui-action-filter='[Action2_4D72B899D2154462AD9E881AD9CD56E6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (member_gender)]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (YEAR(start_date),QUARTER(start_date),MONTH(start_date),DAY(start_date))]</column>
            <column>[federated.1okwhff1g2doca166aifb05qdn9k].[Action (subscriber_type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{09DC9AEF-5ADB-4120-B54B-7D296707EF53}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Bike_share'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100125' id='3' name='Map' w='50900' x='48900' y='-375' />
        <zone h='9250' id='4' name='Map' pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' type-v2='color' w='14000' x='85500' y='5000' />
        <zone h='25625' id='5' name='Gender' w='22200' x='200' y='0' />
        <zone h='25500' id='6' name='Subscribers' w='25900' x='22900' y='0' />
        <zone h='22125' id='7' name='Duration' w='48800' x='100' y='25875' />
        <zone h='33250' id='8' name='Rides' w='48700' x='200' y='48375' />
        <zone h='18000' id='9' name='Top_station' w='49000' x='-100' y='81750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='100125' id='3' is-fixed='true' name='Map' w='50900' x='48900' y='-375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9250' id='4' name='Map' pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' type-v2='color' w='14000' x='85500' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='205' h='25625' id='5' is-fixed='true' name='Gender' w='22200' x='200' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='204' h='25500' id='6' is-fixed='true' name='Subscribers' w='25900' x='22900' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='177' h='22125' id='7' is-fixed='true' name='Duration' w='48800' x='100' y='25875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='8' is-fixed='true' name='Rides' w='48700' x='200' y='48375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='144' h='18000' id='9' is-fixed='true' name='Top_station' w='49000' x='-100' y='81750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A792086-FE7D-4969-A528-817059973840}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5DE7DF4-6E16-4481-83B9-2FA5F58D304B}' />
    </window>
    <window class='worksheet' name='Subscribers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E85C8DE-DDB8-42CF-A99A-8157848074BE}' />
    </window>
    <window class='worksheet' name='Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C626E603-9CA6-4F13-8F6D-01B163378F7C}' />
    </window>
    <window class='worksheet' name='Subscribers_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACD2BE04-F9BB-4285-9FC9-D3555542796D}' />
    </window>
    <window class='worksheet' name='Gender_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:duration_sec:qk]</field>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]</field>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_date:nk]</field>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E4E8EEC-C6E9-4362-98F9-E6240DF8F6D5}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1okwhff1g2doca166aifb05qdn9k].[usr:Calculation_999236171371044866:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D3B8AEBC-840F-4836-8B45-A1BDC43A3849}' />
    </window>
    <window class='worksheet' name='Top_station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[none:start_station_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB488618-9EA6-4866-83D9-828F0392FCBD}' />
    </window>
    <window class='worksheet' name='Rides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1okwhff1g2doca166aifb05qdn9k].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0962FA5-0C94-48EC-974C-E16F81F5CB33}' />
    </window>
    <window class='dashboard' maximized='true' name='Bike_share'>
      <viewpoints>
        <viewpoint name='Duration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Gender'>
          <zoom type='entire-view' />
          <highlight field='[federated.1okwhff1g2doca166aifb05qdn9k].[none:member_gender:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rides'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.1okwhff1g2doca166aifb05qdn9k].[yr:start_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2018</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Subscribers'>
          <zoom type='entire-view' />
          <highlight field='[federated.1okwhff1g2doca166aifb05qdn9k].[none:subscriber_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top_station'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B871E551-F406-4C9C-BBD8-69BE23981DC8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bike_share' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aYxk2ZXf93t77BG519rVVV3VG5vNbjabnCY5JEfkyCNjOBBoQPoi27AN
      AWNbNizPAIINGRj4m6ExNDBgAZZlGJIgj3ZqFo5Ejbg12d3shb3X0rVmZWVmZWVmZOwRb73X
      H17cFy8iI7eqzKpqVv4bieqMuPHefZH33HuW/zlHk1JKDnGIRxT6g57AIQ7xIHEoAI8I/E6D
      pTsbANTXblNr9R7wjB4O6ACL81d45513uLF4Z/vR/gbnP7l9P+a1r/A7dd566y3e//iTodc/
      unB+V5/vtWq0euGuxz+M2Lj5Ma99cBWAT86/xaXLK6zdXuDjS9eQwO1b17l45caDneQDgCm9
      GleWOvzaV76AlJL1lVtcv7nEuec+z82L7+EHEWef/wLN29fZWF+kaz3BtUsfU+1EvPy5J/j4
      /AKl6RlOHZ950M+yJT5+/wNOf+5XmMpZLN9aZPbkCRZu3KBZvcP773lky9NUbMHCnXXOPfVZ
      Vhc+oSNsZkp5WvUN5uYm0MoTXLn4Ia1Gi5e++CVuXPyATmTzuSdmOL+wwfRUheUbNyjPHefJ
      0ycf9COPxVROZ73VQM+UEYDreqxdfpt3nUlWP7nIy8+c5L1PVnjxqSMPeqr3DXrYrmIVp5m/
      epE/+t6f8/prr2EYOm+8/gZdN+KLL57hk0tLLNxe5fMvPIdBl9dff5/O0gU+mr/NtaXmQ734
      AV585SssXnyPH7/2JrcXFwmBG/PzYGV54cXPs750i/W1NaIgwqTFakPnxeee5uqFjzj6xDP4
      1VvUXZg7/jhfevFx3v3Zz3j9/RssXXib+dt3WGrC0aLJaqOLYRgP+nG3xJlnP8Of/+s/4qnP
      PAXAhSs3eO6Zs7g9j0KhgOeH2Lb5gGd5f6FbU6fxb3/Eer1LsVTkxIkTCAye/+xzaNrAROg1
      a7z/4QUEDsdPTFM6/iSPT2WZm5t7gNPfHdbvLBNqJr7nUsoZvPPWL1itNjBlwLu/eAdfM6lM
      TmJoHhevreE2Fnn/40tkihNU8nZynbXlBX7+xoccfeopTkwXOP7kZ5jK6szNzRFpFnNTJS5e
      uPgAn3RrTJ56jiOlLN/8S79BKT/Fs08e4flnzuHnT/DcqUmqK4u49hE+c3r6QU/1vkI7dIMe
      AqDRbFAulR/0NO47DgXgEI80Dt2gh3ik8WhZPI8wNjY2CIIAKSWapiGEGHpf1+O9UNM0NE0b
      ei/9u1IYpJTJNYQQyeellMn/pyGlTD6r63pyTeU0UO+nFZJxr43OY9xc0/dX44QUfZtWghw8
      56EAPEJQf3S1SNMLSy2ktAAoYUkvKLXoRz+rrpu+/nbzUO/bto3v+8nvQohNwjm6yNNzGxVO
      9Zqah4KO3n8N0A4F4JFHerGmfx8dk/43DbWIxwnEuOul76U+o+s6tm3j+V68MUtJEATJ+5qu
      obH5RNpqPludXKPj00KyrwIQBAH//J//c7797W/zxhtvIITgyJEjtFotGo0G3/72t/fzdp9q
      NBoNXnvtNSYnJ6nX6/zGb/wGr7/+OrOzs1y9epXZ2Vlc1+XLX/7ygc1h3KJPI63WjEJ9Tp0k
      4xZZ+v/HCUgURTSbTcIowjQMpJQY/X+FECAAbWu1avRe241Ln3DpMftqBPu+T6lU4tatW5im
      iRCCy5cvs7GxwZkzZ/bzVp96lEoloiii2+3S6XRoNBq88cYbbGxsIKVkYWGBWq2G7/v7fu9x
      Ov1Wv2/1XnrRb2czjPt9zJWBgW2g63p8ushYHZIM7iuE2PJkGndSjFPV0tjXEyCXyzE3N8fT
      Tz9NpVIhDENOnTpFrVbjww8/ZGVlhSNHHp0w+3aoVqvkcjmOHj2KYRiUSiV++7d/m9XVVVqt
      Fs8++yw3btzANA9GS03v7qOLRAgxtGOmsd3i22pBpo3f9KmTyWQIgoCMmSGKooHq01+outa3
      UyREIkLXhvdrCYk+P/os4+Yz7nkeqjhAq9XinXfeoVAosLy8TKFQQNM0zpw5w4ULFygWiywv
      L/PSSy/h+z7PPvvsg57ypwa1Wo0wDLf0qIwzKoEdPTowfrGNemJGry+EwDRNMpkMvV5vyKuk
      3lef3QqarmHoRjI+jEJ0TccwjE2CrOa56fm2vPpdoFqt8v3vf5+rV6+yvr7O/Pz8nj5fLBaZ
      nZ1FSsns7CzFYpFcLodt2zQaDVzXRdM0Tp069VBzbraD7/v84Ac/oNfrDb12EKrOKLZaTErt
      2MrbotSOcbt/slunPj8qNOOur2kavu8TRdH2i3zk+ukfXRtcM4zCxJDe6vQah309XxcWFvjW
      t77F97//fXq9HqZpcuXKFX7yk5/w8ssv8+STT/LMM89s+fl6vc7a2hrPPvssrVaLXC6HYRiU
      y2WefPJJzp07x82bN7l27RqdTmc/p37fcOHCBb7+9a9z9WpMTf7www+ZmZnBMAw6nQ6VSoWb
      N2+SyWTI5XLcuXOHmZkZvvGNb5DJZPZ1LuMM2K28N1vp+6MLbjeLLn3/KIq2HbPd9TadRLqW
      +Pi3OpHSsQVd1/dXBfI8j1dffZUXXniBq1ev8sQTTyCE4OOPP+bUqVOcO3duv271qUWtVuPt
      t98ml8vRbDaZmJhIFlG9XqdSqTA1NQUM7IRSqcTp06fv+b5BEAy9Ns5NOOQ71/Wxi2mrGED6
      mjtBCIFhGGQyGTzP23TKjMPoCZQ+DYSMXUaaBoZuDBnLo7ENJXSapt1fG0D0unhCJ5vfeid7
      7bXXmJmZ4cknnxz7/qVLl3j66acPaor7CikFeC26nTZRZppS3nlgc9nOBhjFuAWWfi/ZPTWN
      KIqGgmrjAlOj0DQNy7KSE77T6eC67tCY0WDYKJR+n1aRRuefnm/6JJNSIqRESnGwgTAZBQQX
      /pjw2g+Iln5B51KFv2N+m/nCLE+enOLFc0f4iy8/QaUwEIhOp0OxWORv/+2/zRe+8IXk92az
      SblcxnVd/vAP/5Df+Z3foVQqHeT07xrhzdcIzv8R4fxPwWvxqvs8f7/1WxRzNi+eO8LXX3ic
      Lzx17L7PayvPyOj7o0Ey9Z6CYRjoemxsKh1+9LPjoBZ1LpcDoNvtEgQBruti23ZyDSEEaCTq
      zDikF3z6FNoq6JWOfksp+8avcXACEF7/Me6P/zdk49Zg0nYBBISR4ML8Ghfm1/jXr17kO197
      hr/ya58B4IUXXmBqaopvfOMbnDp1inI5puguLCyQy+WwLIuJiQls2x573wcJUb+F+4P/lWjh
      jbHvt7o+r36wwKsfLPCVJ3L87n/yInrl/mSPpb0s26k1QgqEFOhs5vakd1zDMIY4QOlrpCO+
      CcVBCqQEXdMIgmBIHVMcJWXjSCRSxN5/g/HG+ejc016mUfUnPWYU+y4AUgr8N/8v/Df+HjAi
      jWYII86OnhfyT/78Iy7fqvI7f/UVZmdnAfjWt741NE69DjyUtkS4+A69P/7vwWvuOFZD8sW1
      /5fuP/19st/+A4zjnz/w+ZmmSRRFmKZJGIZD78UqgUBjQJKTyMQPP87lqbxW6rrjTg2JJBIR
      juMghcTzPaK+p6ZcLid2j5SSMAyH1BpkfAhshVF/f1roRhf/durUvtOhg/f+Cf4b/yejix9A
      t8LNH+jj7UvL/MG/eBMhHpqwxK4RbVyn98f/3a4WP8Arzse85FxB9jbo/pv/mmjj+gHPEMIw
      3NrVyWbW5dBiZLCDCiGGXJfKrpBSYppm4p42DANDNyjkC0xUJqhUKuiaTiFfSHb6breLlJJ8
      Pp+oRQAag2jwVrv/OKHcapdPR5fTMAxjfwUgWn4P79Xf3/J9bRsBAPj5hUX+zc8u7eeUDhxS
      hLh/8j+A19rV+Ire4j8rfH/wgt/B/dP/ESm2/272A1EUEYYhtm3jOM7Ab69t9vZoaH0K8bAQ
      bAW18JWHRQhBsVhMuD3qlDFNE9u2iaKIXC6HaZpjjW2F9KKOxHC0OD1mHNTrymYZvce+CoCU
      Au9nfwBya7/udieAwr/88QVaXW+/pnXgCM7/EWKXO7iG5L8o/BkFfcTjUb1KeOGPD2J6myCE
      wPM8PM8bolmoiGoCbVh1GFU1lMqT3lm9wCMS0dB4wzBwXTdRhdqddrIIbdumUCgk47fb7RVV
      Qsg44ivZbGyPeoPUZ8dBzXvfBECsfES09Ittx+x0AgB03IA/f+fgVYL9QvDB/7frsV9xPuIl
      58rY9/wP/nC/prQtRoNcaYyeBJLtd31d1wnCANdzcT03Nlz7w5U65DgOtm1j6AalYolSsZS8
      DwzRFkbVrkhE8a4vxdCCl5JEw95O9VFQwpMeZ5omnuftnwAEV//DjmN0M0LTd9bx3zi/uB9T
      OnCIxi3E2ic7DwQm9CZ/rfDvt77W6kVEY2m/prYl0rt+GIZDQqDrOoYe6+5SSjTiRagWzahO
      ruyBNDQtpiXk8/nEU2cYBoZhYJpmspur98IwTIxyJQyapg0xQJP59QXU7Ks0o0ifTmkukfpd
      vabUMN3YzxNgdXflQDRz51Pg+nLtU2EMi/WruxqnIfkvx6g+m693eT+mtS3Si1lFY8cR4JQQ
      SClTO/FmQznNyUq7I9PszrRnxnGcxIWadrGO0i10bSCMuqYnKouhG5tOsdHfDcNAaptPOCAJ
      wLXarVgNvKdvMwXZ3djVONPysUWApYWYRNhagKlFWISYWoSjhViEeF6PbDa38wUfIERnfVfj
      nrYWmDEa+3a9e0EYhsmiVYtl1C0KjPWahFF8Yhja4PMyGs8uVWmOSkjCKEyyu9KLVt171L5Q
      u/ZWniBFjx5nDEspkUIgtsgmazQbCCHIZXP7GAcwrF0N+5+n/vGuxmWMv3kvs7kv0OzdCehu
      Fv9ernc3UL729I5t2zaetxeHg7bJWLZsa3ASSAjCIKFHpBdv4AdkMhnCMMSyrIGeH0Wboshp
      ct12dIpxi3uUxjEa9wjDkIyTwQ/8+P09PP32X01uar8uBU7xQBfDfkEv7S+dQSscXJU95euP
      hCD0PHQ9dnOm83p3gjHC+VFpi9lsNsnv9X2fTqczFBhrtVpo/QiwpmmJIEpkYoeMU2VgGz7R
      tmGy2Ks1erppmobjOERRFOchdHv7ZwOYJ17er0thHn9p3651kNDnngM7vz8Xs/MYx17Yn2uN
      Qeyhkf1lE/9/EASgseusM2WcxszLYTRbTdbX1+l0O0P+d9M0CcJgiE4BJIJRLBYplUpks9mx
      tshYY7f/305Isz4VD0idVp4bn3z7JwDnvsX2weu9XOsv7st1DhqaYWGe/dbOA3cB8/TX0fSD
      LdKRqCVoiCimD/t+QBAGu+ZWxTvv8E5tWRaTE5Pk8rkkMysIgiEPUafbSQTCMIzYBdlXkTKZ
      DIVCYbwrc4vdX2P76O/oc6sMNCAxwmEfBUAvn8R85jfv+Tpa+QTmU39pH2Z0f+B88a+Ddo/Z
      aZqB8+W/sT8T2vIeg6wqwzCwLAspB14a13N3JQRCCPTUosxkMolbsVwqMzc7x+TEJEIKVtdW
      qTfqiQvS8zw2ahsEYUA+n6dcKic7/DiqtkQiRJS4UccxQLezBdR9oygim80OGee2bVMqlfaX
      CuG88jfAuReKskbm638LbZcG9cMAfeJx7Jf/q3u6hv3Fv45eeWyfZjQeMb9sM2NSyuFo73YQ
      UsZZV30XY7FYpFAoJHQGdY1sNsvU5BSFfAHP85KToNlq4vv+2OQc13UpFAo4ziBnQksZ3Vvx
      ecY/a/90QKIbelKhRO36lmVRqVTIZDL7KwB6+TjZ3/y7d70j2r/y25hP/Np+Tum+wP7y38B8
      8j+6q8+aZ7+J/cp/s88z2oyYYGYMce51TU9KK6gsqnQwapQHJPokONMwmZycHKu3J/frC8js
      zCwTlYkh75EQgvXqOj23lyxKz/PwfX/IK5Xm8kOs06t4xI7P248laGgJ0zSbzSYGezJO7qRA
      3QXChTfp/enf3DU7EjScr/0u9kv/+X5P5b5BSoH36u8TvPuPdvkJDevz/ynO134XTdt3Uu4m
      1Gq1xOWoqifAcJDKMAyy2SwQMzUBTMvEtuzEly+EoFQs7XhajEIIQbPZpNvrJsxRy7IRUcTk
      5CQbG9vHkZQRG4loy7zf7T6ngm62bVMsFgcn1m4EQErJW2+9xfPPP8+VK1c4duwYKysrPPfc
      c1SrVbLZLO+88w7nzp1jbW2N559/HtFawfvZHxBe+h7jqNHJBOeeI/ONv4Vx7MUdH+bTgGj5
      Pdyf/B3EyodbjtHnnsP52u9invjCfZtXvV5PBEAhzZEBEr95oVCIyWu2s6V78m7hui71Rp0o
      jLAdB6Qkm81immbiLh2FWrzp00u9vldkMpmhTMJdCYAQgjfeeIOVlRWeeeYZwjDk2rVr/OW/
      /Jf53ve+x+zsLMvLy3zta1/jRz/6Ed/5zncGyQi1ecL5nxEu/BzZvgNRgFaYw5h9BvPsNzGO
      fHbPD/FpQLRxnejm64jaTWSvhpadQJ84hXnm6+jl+99DTCWejP4oAprSmaWQSb2eYrF4IHOJ
      oiixAySxSjUxMZGkSG4HVUnibha/pmlUKhUsa2Bj7srvFoZhEty4ePEiZ86cod1u02w2abVa
      iV514cIFOp3OEEdEn3gce+Jx7Bf/2p4n/LCgVqtx69athNp77NgxZmZmME2TpaUlpJRJUvf0
      9DSVSgVj8gzG5MNTDlKR0BQ/H5ROLbD7kdlIDBLc01le+w3DMJicnEwJQZwLns/naTQayXzH
      3TstsArbBfPShXiVwZ7GQ1UZ7mFFrVbjhz/8Id/5znd47733MAyDxx9/HCEE3/ve9/jGN77B
      Rx99RLfbxbIsfuu3futBT3kTlA0Aw6mCSihGaQdSSqanpw9EABTCMKRWqyVzchwHy7JotVoI
      KTbnKDCgTqSFoFAoJBv0pnv0+UulYolcLrc52HYAz/VLh2azSafT4caNG5w8eZLbt29z9epV
      lpaWaLfbrK2t0Wq1OHv2bFLT52HDVkVllY+9UCgkcYA4mLV9war9gGEY5PP5RB1zXTexQUbr
      gKahdnUVG9iuSJqu6eRz+S09Vns+Af7hP/yHvPLKK9y4cSM+6g2D06dPU6/XeeKJJ/ZyqUPc
      R1SrVYIgSHZ7pTZIKRPPiBCCXq9Hr9dDSMHszOyu/O73AiEE9Xod3/eTlMmJygTNZnPTjp72
      AKVPgXQMAgYCHoQB2Uw2Sc0chz3H3s+ePcuFCxcolUpcunQJx3FYWFggn88fCsBDjLTBm144
      lmVhGAatVivJGQYGlZkPGLquk81m4wht328PkM/nabfbQ2M1NHwRYOnm0G6ePhHS2WSmaW67
      +MMw3LsAvPDCC8lRValUOH78OJZlcfv27b1e6qHH+fPnuXbtGl/96lcxTZM333yTz372sywu
      LnLu3DmWl5cTGsD58+f50pe+xMLCAmfPnqXRaHDixIkH/QhDSPvD0xFhz/OG3IswvJgOGo7j
      JIky2WwWy7L6VA2ZFBHWdR0/8DH7Y3wvLsuStgXSBrJlWtsufug/46ERvDXa7TY//OEPyefz
      WJZFqVSiXq+zvr5OLpfj61//Ou+99x62bWPbNtevX6dWqzE1NcWv//qvk8/vE1N0H1CtVvF9
      f2hRjy5yRWkIgpi7n8/n75sQ7AbtTjsJxHW73SRYN5pLEEYRlXJ5V8WEDwVgG3Q6HS5dusTx
      48dpNBpIKZmammJ+fp6nnnqKpaUlTp06RRiG3Lx5k8cee4zLly9z5syZh84YXl9f35T8ok4C
      5RdXRqlKWjmo5hw7wfd9XNcd8k4ZpoFjp3hCmjawV0ZcoNlsdsvNJ52nIIQ4FIBHBdVqNYlV
      KDUo/aNey+VydHtdJioTB24Aj0K1jHJddyiWJKWMS6FIMM24uoSqa+R5Hq3WcE2mycnJseVR
      giCg2WwmdUh93z/sEvkoIV2PX9Gi0+mIURTRarXuq/6fhiLDKWFM6Mz9WkNSSsJAslHbYKIy
      kQRgy+Uy3W4X0zQxTXNTor3v+zSajcTAT3OhDgXgEcEouzO9yEeVgHTVuPsF13UTg3ccvz9G
      v8qzptPtdRODGUiKKCsEQUCn06HnusmpUW80kFIktI99zQk+xMONdFrgaCQ1DdFnat5vdLvd
      obKHKkahGl8gJaY5UIk8z8N13U3CqgJqnU4nTs7v5yD7vk+235Qv/dyHAvCIQP3R4/ajcshz
      MjRupC3p/UDakE0LpuL0Sy1KqtSlWaG1Wi1JpzRNE8/3Yi5aJBIVTzd0PM8fCgLC4Ps4FIBH
      BEN+fjlcc0eVOLcsa1OnloNGq9XalAQzjvAGcY8B5KCOaRRFdLodur0utmWPryMkwTA2E/yk
      jEu06xs3P+Lf/eRNfvKTn+KNKXI0isVbCwCsra3tw+Mf4n5B/dF1XU8S09XiF0IkNYJ0XafT
      7sS5vGOqP+wWQbg9rRniOEvaM5XenZPF31/Lg6oSqS7vKWPX88fXN4qiKIkuy5R6p7xCpt9p
      8thTL/FUucVrb59noqjz1NE8n7SKrF/5OUce/wyO6LCycodTT32WH/3oh7zytW/R6zTJ4PH+
      lSVsJ0PFFjRDiR/AV7548A0fDrF3pN2dCmEYksvlcF03SR0E0Lw4IFYsFOM6mnt0iVarG5im
      QS6XI5vJJjt7vV6Pr69pQwk6aQM9zVNSp4Gu6Wj65gR4VcJRSJHQucchHS1W34PrupvZoM1m
      E+F3aHZ8IiPDM2dPsbGxgSM7zFdDzp07x9nHT9BsNvnwyjxf/fKXCLwW7bbHZ1/8PEQH3+/2
      EHcHtTiUKqB23SAI4p69qXxbKSWe61HdqLJeXd9yh90KhqHTc3tx5Ly6TqPRoF4fVIhIl0xR
      Cz2toiQ7fv8/2No7lI5ljMOo4Z9uoK3b+RILn3zAG7+4wq+8/Bn0sMdHVxYp5W3m5uJKZZ7n
      YWaKlPI2jqlxdX6JUqnE8+ce52evv4mVKVHol5h4WBvXPepIqxdRFA0tQLX44wWUokqbRuJm
      7Ha6myKu26FYLGIa5qBkYhBs+nx6waqFma7eoOt6UtFOjUn/pD8X2wWb7QYlTOkTRiVtwSEV
      4pFBuk3qKHtSCEEQBmhoCeVY1Q5KqyiO4yQNLXaCEILV9TWkEBiGOVRLCIb5O6OvJ4LSb9Ih
      xXCjvnSVt7THCGLxtVJu3HHxjE6ng2maOI5z6AV6VJBeKOnq0BAvGsd24pZIoYZu6Anv3nEc
      stks7XZ7KJd2J3S6HZBxh5hxIbV0BDqt9qT7lSV1jPS+Z0jX0TVtk/CozjHqtSga7h2sYgm6
      ttneOBSARwSbdsoxO7Cu6WimljSyUFx9RX3fDVT3SNf14rr+22R2pXN5pRx0ihwbh9Dot4Yh
      eY5R3V7TtKS3GSK10CUIGYFuoGvaUEO+exKA0T6xB/n5vd7roK79MIy9m2uP2zVBdXMcqBeq
      gUQURXuiRCjOTbPZTK6lbdHFZUjo1C6tdH8NkP0u2ZIhYRgNkqWvYWjG0DMKOdxyaStNf8dv
      sLa2QrPjsry4iBAhi0srQw8zincv3dp1d5e9GFV7GXuQ134Yxt7ttVUdILUo0kWj0gGiVqs1
      pP+Pg6IsK2M6bVhv97m0J2ZU/VHuTlNFbPtyoH7GNcZLe48SV6cUQ4KummmM2iEwcgL89E++
      S6eY58zjL/Hk41NAxCeXr/LkmZOEVp633nqf08cmqfuSoiGGjBCFf/nqZR47MkGlsHMyghBi
      bHeSex17kNd+GMbezbWV9ydNhkv7xtW/SkBGm2mMQtd16vU6juPERWZ3SE5XiKIo6RYDg1MH
      NpduSdsJab09PQf1bEPfhUbigdrpBBsSgBdfeYX3r84zNal0JI1CIc+dao1uUKdYzLO8Vufp
      4wNDavRL8sOIINodoSoMw10Tr/Yy9iCv/TCMvZtrw0CdSEeF0z7x9GYWhuFQodpRmKaZ5O2q
      axiGsalpXhoDcttA6BTHJ12TNIqiTZX243HDp4AyfofHxapTJKKhk27L50j/0rqzRMtP7+g6
      z31ubyULw0jQ6vocfbgSog7RhxICteiUwRsEAZZlJSdLEAQ7Cplt21iWlXR+GbdLp6FpGqZh
      EsggtZD7PYClRNcG1So0XSdK9RWTsl+cV9cTm2WcPTAaM0gbyOMwJBqVx84wbYV499C0PAwF
      HfcwGvywIgxD/MAnDMOE/mCaZmL45nK5OIhlmjuqD5ZlJfV2dmssa5qGZabiC2qB970/2VyW
      TDaDSHF40pCpYJkQYjCm37cjzftJt3jdCpvEWzOg0+zCZHZXDzQKL4ho9w4F4KFEfy2ISCRb
      XxRFSSKK8uTspSaorutYlrUn+0X59qUYcc2KmOefzWZxdTd5X51W2WyWMAyTrLH0Z9WzxcIk
      QSNpqbqdcA4JgN+sU+96TFmDl9duX8eLcmxU71CemKJeq/Ps889hbSPw0S5YpYe4v0i7A1Wf
      rzRvXi2SvSxkGJQ0Ufm2W0V404jf1zEtPSmGq+YWhfGuncvmaHfaSX2ibDZLLpdLElqSmMG4
      HV7b3PV+q3mMnAARUkgSMyZyuXT1OhmZ47EvvMz1D97jc08cpeFJJqzxXqBQCFw/2NUX+TB5
      ST5NY+/m2ulFaehGkmcbRv1CWKncgE6ng23bu1KDFCzLIpPN0Gq1mahUCMMwOVlGEQsjoMVt
      VgN/IARCCDrtDk7GIZfL0ev10DQtpmv7Ht1uD6ff5T0KI3zfRzKwmdOG/na7v1KRRgQgzqAx
      1GeMDL/6q1+jXvO4M3+ZZz/zFDdur/PsrIbGeC+QEJKeHx16gQ5w7N1cGwad3S3LwhBGUjhW
      eUyARL3odDo4jkOxWNxTwC0SIbV6jcmJSVw37jvmuu6mhWgaZiKUtm0P9QhTJRoVDVuKeJzn
      eej9f4eEOmX4Aok0qHsGYRB3nB/pMWboxrAAlI+f5pvHT/P+L96HpGWnTWXCpjLxmXhMaTj5
      eBSREHQObYCHDulgk3KBOkbcM3fUtaigvDu7hWGYzM3M0el08Hyfcrkc38vQsZSJTD8AACAA
      SURBVMw420xRJdSc1L/Kjhi6vx9gmAZBFFCr19DQkmSedMmUdKMPISXIQZULlUMgpEAfiftq
      2khSvIx8lpfvUJya3fVDj0IISc/bORvoEPcfaWU1nXyifh/nTnRdN2mbtBNy/XHFYpGoT9VQ
      RrK6l+d5WwqVCoClo7phEMZ+/Ugk7s/0HJUwp7PD4pznOAJsYCRtUdNqoLKFhgRg/dol/uy1
      N/nSlwf17eevfoKZybBRre/KCNY0jWZ3b8kThzh4yP7OCMM8ICDx/0spk5qcagftdDp4npeo
      Qrs5EdS4dqdNPpcfErJyuUyv19tUplF9zjTNxDBOL1hNj411tZOnPzvKC9KlBIyh90fnrkhy
      KQEIuHprjZPHjjMxOSgrl8sXMCKXuXPP7soIti2DRts7NIIPcOzdXBuAvr6vOkIqD5CUMkmL
      1DQtcYN2Oh1c1yUIAqrVKrquMzExsS1FQkHTNIqF4qbXlKGdVoVgcBKp3TwSIjFsVQBN0+Mo
      sW6MPwnSKtW4+Yx7LSUAFs8+fYa3r1zFS3R4wUa1ytSxE9R3aQRPlbLUO+6hEXyAY+/m2no/
      gprm1Yzq/cViMSlRous6+Xwe0zTpdrsJ2a3dblMq7b1LJAxOhmazObRY25HOB2uCCUfjbEnH
      Mk2E8u6k5qqM4cRlGg0qxqkOkK7rbuonnCYAprHJBmi5PrbuUC4pIpvO0889D8DM5CSwsxFs
      GjqN9qEK9LBD7Zpq8Xc6naSPbvpUVx1bms1m4kG6V2QymVjQNJ33qtANJULCak+y1pN8cUZH
      1+gXttITI1YZMeq1tJ9f1/WhtMv06+N+Vy7X1FkScPX6TXqdNkE4ntAkR+jQ46BpGvmsxUZz
      vA/4EA8eajGohhhCCHzfp91ujzVSe70epVKJSqVCLpeLUyh36OY4DlEUUd2oohsG1zsGFxsa
      ndjGjU8nIJKSP7tYG/LySCmTqLDSi9RJpsb5flz8Kt3kLxLRkFdpHBU7JQAe7WZAq93FMsfr
      eLeXlrCiLo0tvJx+EGEZOmePT/Lu5V++hhmfdggZUwTGcerTRm86gGUYRpJBpQpoVTc2WF1b
      3XMOg2EYTExMstH1WepKNjyJbeqYhoaQEiEkfiiQ/cJXuqYPOD6ahmS4c02a6KYK4yoXqWKF
      pp8x/f9RFJdQ2VNS/PrKIreWVnnqhRdxiHcNxdNQ+thytUWz7fH7/+ItPvfEEcqFDI4VP5DZ
      N16UO2tTrqa+tV55mBG2+/G//vnHKOacIWqy2u1HewQopBeV6nqTz+eHbDwpJc1Wk3Yrbl00
      PT29LWV6q/v4QcC7yx3WPDB1HVOHRi/AMnSCSCAlfPOYNpTokv5JWvCmXZ8pt6umxaVehBSx
      8dwXFOVFkiK+jmma91YVQiUvpNHtdsnlcqw3utyutrf4ZAwhIvS+tBu6RrRNJll67G6wl/Gf
      trHbjdc1eObUDHpqMwnDkCiKEppDr9fbmSXZF4LRMjdRFCV8HMM0sC1713NOo9Xt8eqi19/V
      Yw+tF0bYpoHrR3zliIaFGFJXRpNjhgxkGfcQMAwTo18GXu3y8fcVs01ty06EwDCMe0+KH02A
      sCyLKIqYKDhMFLbfHR6mnNlP09idxkspSP9Z1GI3DCPx5482oBt3/XFCko7C3gt6gSCSMg5N
      6BpCSGwzriCh6xpuBJax2cU57v+Vnz8u/CuS3T6ddK/+9X0fo+89E0LcmwCM+yJ2ysC5H2Mf
      lnk8TM+nFoCmaeTz+SEatHo9veCFiJvneZ63ZzVnN6i5IZYqWisgFJIwiHBMg0gIhOyryyMq
      2OizqKwwDa3v6h0Yz6OfSwJ8YTiIhO/3g+3lj3hQYx+WeTysz6dpcWkQs5/4vlUASdO0bVMc
      7xZSSsqOkSw+TQPL0Mk5ZkxP0HVMfXyVN0XdViqOECKpYZTOBkuSZuSgw8y4SPa+1QVaXV5g
      cXmD6eNzhL0ep8+cGVsQCeDDjz7i3Ik5Li0sYmanKVshR0+dxhpjBK8s3mS97SJ6bUrlDB0/
      z7Hjc0wUN/NTGhurXLi2yEwpg685FMwILTvByaMzY2Yh+PFPfsaTp0+yvNHm+NwUvZ7HmTOn
      N42Mmrd553qDubLDemP7sRDx4XsfMjczxXJ1fcfnW7p5nZV6G0sEOz7f/LXLrDVdJnLmls93
      /sP3MHMlvFZ96Ho5e1gITNNkcmIi6baY5t9Av9RIygO0WwghaLfbmwxoBbUbTxcy5GstNryB
      s8bUNNZqHebKGQqGgXLcqECX0umVmiOlhNTCT7tOQSXHkOj74/IU9u0E8EPJ3FSZTqeFvzmn
      eQgz09MEns+x43P0Wi2aboi5hQdIM0xOnzpBqTKDDH2q1Q0cZ7zhZZoWGcfBcvJkLZ319XUc
      Z3x1io3bt/AF1DoBU+UCreYGUh9/XV/LkBUN1tvRjmMhpNvxuHVrcVfPVyrmOfPE2V09n/KV
      b/d8c7OzNFuNHa+nVCjHcTBNk+npaSYmJuJqztksExMTuy6GNXpdIcTYPgNSSrrdLvV6nXq9
      zok+40YSu2gjKamUsjxW1IFhaoPazTfZJv3dPgiDJJc5DSEGZVvGJevsW21QGQUsr24wM1lB
      RBF2Nsf4v7ng+pUrFKeO4HfbTM9MYyIIzQyOsfkDy7fmiYwsGT2iNDkNmkEU+ORym3fIdqNK
      vRtRyZmEeoasbSR5ruPgui6WAasbbSYrxS3Hyihg/tZtHjs+u+NYgLWVZfITM9TWVnd8Ptd1
      yWQyrK0s7/h8XrfFWqO37fOtrSyRLc/Qa6wPXc8w9LG6fJpRmX5tt1QHFT9IZ5WpgNS4EyCK
      IprNJpEQXG1prPTi7DApQdeh2fGRUcSRksNzkxqWFh8DQRiga3riw4+EQB+JBitatfr/IAyG
      YgHpaLAKmB0Wx31EcDfGrJQSz/fJbPE5KSVvX7zFH795jd/60hO8/MxJNE1LssHSucUqwqx6
      dy13JK8vuhRzNoWMjWlotNyAlbUmoYTJYpaXjmU5no0rRsTeobhbvIhSer02iAXYtj0k0HFr
      VYnG5soQSjgPa4MeYkuEYUittoHjOIkOrloRqZ+fz9cJsyX+0U+vMzNV4vHZMqZpDi1+RcZT
      8QhN07hSdXH9EE2DSsFBk3FFkclyjmqzx8myxWymv7MzMHIt00Iasc8/ikRC8VaGsbpPEiMY
      01sgvecfngCPCO7mBGg0G0m8QC0oyxyQ4XRd55982CQUEg1Je2ODv/kfP0c+N97uUo2wfd9n
      tSu4sOZhZbNYlkkYCfxQEEaxTv/CnM2MHQ0VxB2FJB4bBmGSCJNxnOQUCFPuzuQzKYNZ07T9
      d4M+zHDbNf7Zv/ou7XaLdrvF4vw1bt26ydLSEt/9N9/j6s2brCzO06zXuXDpMoo9snzzGtVG
      k4sXL9NtVplfvPNAn+MgkY64pvt3xfQBQNNohjqe0OmGUM7bGLpGGEZcX67zowu3x3KEpIy7
      OgohyOVynJ4p8pufmeFE0UD23ZitjkcYRuQci/m2xs2eiSsN5JgK0+oE0LU440zX49qfnu8l
      fc/GPRcjtOhH6gT46Y9fBQPy+QxhKNio1ZgoZFiu9pieKqPrBlEYcPOjSzz+mac596Vf5UgG
      3vrZj6itLFM3S1iZIr/5za9g7wMt+H5iNydAGIa02q2EhhyEQVyxrR9kkprBG3ciuiEEYcTK
      WpNczqFcyHD+8hJIyedOTfBXvnRqkwEspaRarW6+qabRFTqWrlPK2szXfVY9cKM+RQKwdThb
      kOS0cOh6KmlG6fcqsd4wDBzHSeIEac9Q2h2qadqjJQDt+jq31lpUMhpatkTWNug2akinSNhu
      kJ+aJmhtkCtUQNNYXVuh0ehSKmaZmjvG0s2bPPbYMWrtkMdPzD3ox9kTdiMAzWaTnttLOsRA
      TFhUhua7yy7vLXeZrOSxLQMZCW6vtxAi5hnV603+4nNz/NpzJzddW8q4/KLneUnp9XR/YCDp
      QHOn0eF8TRDK5MPYBjxXjNDkgO+f/oGBkezYDpZl0el0MAwjEQwVSEv3E3ukjOBCZZpnKtND
      ryUJPrNT6oXkvVJ5OPln8vnPxkP27h7/VCDu5qIh+/U6VbcWgcA0Td6+2SSIJJ2uh57PxJQF
      EZHLZQjDiOpalV57fAslTYvLn9h2HJOQUg5VpNM0LaFeZC2L58twuQXtKFZXfKERSA07db00
      J0i9ZhomnuclvCfFgh3NC1Y8oUdKAA6xA7RUf99+tSlNi+v0RyLiq2fKfHSnRy6fIRSCMBKU
      S3lMQ6fW8/jSF54hk91djoCmaUxMTPTLpUe0UmmSQRCgAU/kdWqBgamDoQkcTWyyidOLX9O0
      pAxKt9vFMI3k1EvTJNJzOBSAQySwTAvLsoei+Mr9GIQBn5lzaBsO7QA8P8TzI0JNYFsm5VIO
      3bTQrd1r1OlEFr1cpt1uD/UwMBGcKFhJquM4ZV3T4kR/nUGvALS42G4YhBTyhVgNikKEFBja
      MF3ikfICHWJnqOjqaBJ5kp3Vh2noWGafsanFgScviHhidnddJEdh2zaTk5OUy+VETdI0jUwm
      E8cUtolM65pO2G+8IeXAxalpGo1+vVLVb3jUO3R4AhwiwVZVJtROjYTjOY2P1mNvTCFr4wYR
      0zmTx+biMoYzhbtLkFFQVAYlBMpotVL1gsbNT8gIjdglqhGXUY+iKD4JIMk6TGePwaEAHCKF
      7SjWSmU4mpUsODrtQBIKQTFjcaxgcDQngZgJGgTBnkqsp1Gv1xPimmqlpE6A7ThKjhW7PaMw
      HDqp4mjw5oYZyTODz5/86+/y5hs/ZeFOg7W1teTNN177+V09xCE+xegvHiEFYRRtDmpJwbOT
      BjlLo+zo/Popm5P54eSTvVKo00ifQpqm4XoetVoNKUWc1L8LCCE2uXxHy0IqgTBBUJiY5Zmz
      xzi/cJtCNiKDz/tXbnFntUrt9k0u3FyhWJpA8+p4kcazn3uZ3KcrDnSIXUKVTtfR0fTN1dYM
      zaCiC371iCKhDSfMaJqWNNW+G0EoFApx4rzvJydSvLNHY7s8pqHGW4aF4zh4nodlWf2Kd4Pu
      MbqhJ4nxOsDijU/4p3/yGr/y0tM0m00+uHyNr375Vzg+O8VHFy+SsUyWb98mm83huz267mHh
      q19W6Ea/PmcYjG9Y3YcqzZhuUqfyC8Iw3FTpebdIuP+i38Cj/3q73cb13B2T+VVFiG63y8TE
      RELL1vVBiZV0824TdJ578WWeOj3Dm+9eoFQqcayc46evv4nvR7zw9DNcvbXKqVOnMEQXA4Hr
      73+a3CEeDhi6QRAGmJaFjMSWmU0xFSFCkxqaMVApDNOgUCiMJaLtFqVSibW1tU0lXJTLU7U+
      GsVoAk26B5qUcqhW0CNJhXiUsVs2qOt5VDfWMQ0z8ZYYY8qvpPn4sRemX5/TsjaVUrkbKO6Q
      6j2cz+eTrjC7EazREipppJPqD71AhxiCZZromtEnlZlDdOStavNAnK45NbV/vXE1TWN6eppM
      JsPGxgYTExNxd3rPiz09u/j8VoKiXj+kQhxiE3Rdx7H7SS9SJvX4VeqjitQqYhkMVI69pFLu
      FoVCAcdxki6R2WyW6kZ1UCv0LjAU4LubC2xVXu8QDyf28vdK59XqmjZW/UkzMNNcnIMooQJs
      qkidzWbvysBWEFL0qd7i7gRgtLnBIR5u7PXvNeqLV/8m3hQGEVUlDIVCYV8qxu0GuWwO3Uhx
      f/YIXdPjmqE8gjbA+sotWl2Xjz+5xQtPnyBXmaVRb/HJx+/w1W99m2LW5Oa1y9xYWmJyYo5e
      Y5WZM8/gNWo8/czT25Z7+WWBlmqkMfR6n1KsFn16F+71evvWP2A3mJqcotls3vVmnJRU3Od5
      PfRYXFyk1ukwWSpw/fp1Xv/pv+PK/AalqWkKGQPoMn9rA3d9gQ/ffpXFlo3Rusm75y+z2tpb
      E+lPKzSNLaOuilOf/lGBq1artedG23c/x7jf2N3aHKprzCN3AszNzaFlp+jmqxjaFLliCdsp
      4LXWuHjxIpFmc/L4JKXnfoO11XVOnHyMeqvDC09lqGTvzxH/oBHX4BeMMxEVMU4tIBiUJCkW
      i/tuBO+EfD5Pu90emovqh7wVktNLu8uc4Fardddkp18mXF3dYNV9+E8FzXf5/Mm5XVeFEEJQ
      rVZ3XMzj1KR8Pr/rtqr7gTCKWFtfQ+9nsgkhCXw/qXg3Dml37iN3Auwnrq3V+Lj+8LeCKmuC
      z5/cfQ7zdj50YMsAE8Qep/spAKZhkM/mBq2djDh47fv+ULW6UXwq6dC35q/S7fVo9yKmZ6bp
      9jzmJvJcuLrAV1/54oOe3l2jtnAF3+3h9SIKUzP4Xg9Lj2i3XE49/8IDm1faxal+j0QcBzA0
      Y8hDpBiYB1FKfSeo3sJqvpZlbWuMp2MWnyoBMAyTx47PsdLSQQRUSjkmJiuceuzTbcvrhsXk
      0RLNdvxc2UIe4XYe2HzSaZDIeIENd5Qf7rxoGAaZTIZsNnvfbQAgsUnS1R62g0qIT9ignxaE
      QUDDM8ngMjtZoNlo0upEHD02+6Cndk+IAp+eZ2LiUZwo4DabOJVpSrNHH8h8kp0fbYjtqfUD
      Y6O05CAIaDQabGxs3FOA6m6hav3s1pxV7ty77hHWarWwbfuBHHdpHFT3kt3iwuIKdfHg9hDf
      97DtnZ9/r0ZwGEVsVKsJgzLdlxc2G79RFOG6LpVKBcuyyGQye274cS8QQrCxsbGnz6gCunet
      Avl9S/tB4kHP4WQ5z7MP0Bu2W29cq9Xa03XDIIirKIi4mZzi1I9rQAEDg7JeryfXOHbs2H0L
      iqndXOUM70YNS+Z+oDNLYWnhOh9duAwIbly5yJ31Fp7n0ev1uDV/jXbvgOkVMuLHP/kpAM3a
      Ohc+uQoI3E6bWm2Dm4sH29c4cDtcvHxtn+8fcfXSBeYX7xB4XT764EO8KD4Ze+0Gl69cJ7oL
      zpjiDpmGmejVYRji+V5cs2fMaTC66JrN5oFxg0ah0jDT5dHHVY4b97n7JgCWaeFYsLRym+pG
      F89vs7xwjaWVDaobVdbX1w/0/qtLNwmR3FxYYHW9RrvbBULeeOMXNBo11tbXdrzGvcDK5KmU
      cqzfWd7X+5tOnumSw835JRyjy0YPLr7/Fp1mjTtra9TdvUuAbduYRqwcqMivqhIHMVUi6ndl
      SX9GYXp6OmnJej+gqs6ZpjkkmDvZBfc1DiClZGbuOBOlLKV8GduxYGoy7jyuuUxNlel6ETnn
      YKKtsyfO8NXpY2QyGVqtFicdGzD58ldfpt3qoNuFpMfxQcDrtmg2mpx8/CxOrrs/9xeCwHfx
      5RSnTh0l5CS6BZMvfJHI73FkVuLI3jaJjVvMtX8CjPJ9IG5mns/laLaacceWPl1aLT4hBNls
      9r7aABAb4r1eb1PVB9haJbrrjDClU+42GrwXY3UvY/cSkd7tdX8Z779bp4Va8Ko0CQz31lL0
      gVwuh2M7dLtdYHPgTJU9vJ9C4Ps+9Xp9iKyXZq5uGRC7X5M7iLEHMYdf1vvv5r6ra6s0Gg1g
      0EfLNM2k/n68u5J0lbT7AjWuCUW9Xh+rhx9UBq7qDqOCYGr+mUxmSD0bxT2pQHeWb2FlimSz
      Np7nc2dtg8eOTdN0BZVCFilDNC3uFrJ+Zxk7W6DV9XA0HzM3QX31FhNzJ2jUapw8eaJPNRZc
      v3qFI8dPsFFvkrcgMnOIXoPS1Bx3Vu5w6rETQNxgzrZtRBSwVm1Qztt0AkGvXqc8PY3rh5w4
      GlMAQq/LtWqdE8dm8T2f0OvS6np4oaSSM8lVZslnYq/F/LUrlCoTBNKgXIiDO3eWFpg9foq1
      9Q1OHj+SfAe9doNWt4vQ8kwUbUTkb3p+xzEAyfzVT5g6/jhhp47QTNbX15k7dhKDCK/bot4N
      mc5p/NvXfs4rX3mFTqdHRg/RnCJ+p0ahNEG13uLUiUF8wPNcArfH7WqTqUqRTrOGla8Q9Lqc
      eOzkrunbsRclRERiqDRhku3VtwHU9TqdDqVSCd/3hnZYpYIIIajVaglFOggDfN9HAjNT0wcS
      MLNteygfWc3LdV183990SpmmifF7v/d7v7fXG6ldqtXp0V65zmKvS/2Oz7GpHFcWbuL5Eeu3
      F6i1aty6chOzPEW33aC2tkKj6+HYDq1mnVyuwOr1C6y3e5RnjuMY4PsdFufnmV+4gxdFOLZN
      u1VjYf4mG2vrHDt9lowV2wkrN6/zwfmP8QKNghWxsNHF7cTVi7v1KmvNLsePxEGyW9dvojkm
      7Y1VVqodRBRy8uRJuu0mXdej3WwyOTkZ/5EkeH5Ar92m21zHFxqy0+Dyco1up8ORo3Po/e9h
      ZXWNo1MZ5hfr3Lx+jVq7vun58zPH0MIarbU6iw2PZrOJhohbA3Ub3FheQ4tcuj5kpc/cE6d4
      762PkDr9519j4cYSluOwul7l+NEjyd/ho1+8RcbOsry6jjRNspqOY7hcW1qlOHGErKUnvJit
      yGEQ+9LdMTq0KlGSLloL/awqP8A0TMIoTCo1pD+rBCEIAkQUu1RVvc/9Vo8Mw8C27aE5qt5k
      vV5v0/wdx4mF4m5tgMjromVKWNJDmBlkKMnYOkHgstH2mZkoIWXI8uIqk7PThL0WViZPrdkh
      6taZOfkEGQMkguWlFabn5jA0iKKAtTurHD1+gpW1KlrQoTxzEr9dJVeeYqO6wcz0ZDKPSqWC
      CH3WNpqU8zbd0GCilMPSJQsrVeb6Y9fW1pibmyMIAmzbptuqY2TL2Aa06lVylSlcV2AbsdDd
      ub1ItjxDo7pGNmPS6rhkcznCCI70ewlEUYSpCVo9n1JpEk0GRKG36flPPXGaO4s3mZqdxRc6
      otdAc0rYRmy82Y6N7/nYtoPvu9RrdeZmp1leqyPcBlNHH6dbX8PO5ul6IVOVYnJ/27bxe23u
      1DqcODqLBliOzcKNeSZn5zB1LRm3nQ0QRRHr6+tbZlltUmNGyg/att2nUQ/GbEWY03WdXC4X
      nwxBgGVZGIYxVLPzXqA6w6hOlVLKfnW5eG5q8Usp0VzXlXvVO5Xxs1uPxV68Gw967C/j/bvd
      LpVKZVsBEEIkArBVfy3JoOUoMFIt2kw4OUpAlCt1K2QysXrs+z65XI5er4dlWRQKd1dhGgaZ
      aenOMI7jUK/XCcMQy7KSBH8AcycGn99rUW35TJaLCBENUV33khPwaRr7y3r/7aDrOrZtDzXG
      U/+qhZ9uOSrloMgU9JvWSYFlmEOZYtvp+qpolRBxUV2lwvi+v63huh1US1cYnAS1Wi2uCNdv
      oaSeI4zCnY3gTz75hKljp7n08XscefyZpPmYeoDdQLWp+TSM/WW6/08+WKCcdzh7JL+r66WL
      xqbVIG3ElFaLdvSk0NEIRYRtWkP1g7aDMk4zmUyipyvnxt0grULZtk2v1xtqxaQbBqYZV78z
      dGNnASgUiqzcvs3M5CTdbhd9qjTosr2NUZXGTgbYwzT2l+n+lxaqOJbByanH2U2OiqZrREKg
      pwQhvYD7XZMIw5BsNovv+0N0B9ux8TwvPjFS3qDRArsKYRiSy8XJLIrL0+v1yOVyBEGQNNO7
      F4+RZVuD00jv9wlDwzbt3eUDnD77FKfv+vaHeJC4XW3hBRG2HvFXv/n8juNjr47RL3Uohoxa
      iOsECSnQ0JJdNQ3fG+jyhmGga3qyq+u63k+m0Yfo1MqO8X0/Ic8FQZAIl6pTtFOW2qZn6RvX
      pmEyNTXF+vo6uqZjpBrlwacsI+wQe0MYCcp5h84uiIaKSWmaZrzw2EwpUNTorRyHqmt7NpuN
      6RTaYNePYwijytTgc8pVqxa7ruu4rku318Vv+P26o3Hi/W48RSowptyjdsaJi/2O4FOVEHOI
      Yaw3unz3p5eAeLdPI4oEpqFjmwY9b3xroTRUUkkkoqTwLTBcIl2Ob0+qoGlxR8mME2eHRVGU
      FM1VP1vlEafVJeWlyefz9Ho9wjDE93263e6uGaaO4wwZ8lknk3iA0hgSgFZ9mTffeJ8Ll67s
      6iaH2DvaPZ+eF9wT/Xtlo80/+NN3ef/KCv/251fwg4jf/t+/x3qjy8Jqg//p7/+A8/NrTBQz
      mKZO19vZqE7zZqRMVVces2erHXp0J5ZS4rlxoM+xHXTDQNMGghKJCD/wN58s/d/TxnUkorgG
      aL/kiuNkKBR3X31utHxLPp+nVCpRKpWG7KaRE8DAsnWOnzixq5scYm/YaPb4b//un/HdVy/x
      9//kF/yHd65vOfbyrSpR6si+U+vQdeOd/J/98DxvXVxirdFlo9Wj48bCdP7GGqu1Dhfm13jv
      ygoZ28I2DdxdnADQby7RtwNGd+txas9WernqCJ/JDPfoTRvEaaj3fd/HdV0sy0pUqUwmg67p
      ZBwH0zBpt9vJibET0vdTEWnlGlUYEoBipczCtSts1Js7XvwQe8P87TqXF6t866XTXL9d485G
      mx+/Pz92bLPjJbu4ws/P3+LdK3HSzO1qiyeOTdBou0yVcqzWYt79//Gv3mS93uUvfP40N27X
      sE0d09jdCQBxJWbT7Hda7yfCK0LcViVG0qdBWmha7RaWaSXNKZRRPa7YbhpRFNHr9fB9n16v
      h+u6ccTdNHFdl1wuR6fT2ZWrWAlJs9mkVqvRarXo9XpbCwDEtIDlO9UdL/5pgBASPxj/RR0U
      K9EPIq4v1xBCsrAaMyv/n++9xx/+4GPevXyb08cm6HkhpmFgGjo9L+Ddy7cJwoiF1QZdN2B+
      pc7Z4xNcWhgkCYWRwA/60UtDZ7qSZ6PZY24iz2qtg6bFYxbXmsxN5ml2vX57UYNwjPE3DopM
      Fu/AQVLmxDCMLdsljaNC67oOMk6RzGVzWLYVt02K4r+F0vfHlVRXEVzLsmI/vWlSLBYTr1MU
      RRiGQbfbTegM6pqe5w0tbsMw4tZKrrspnVNhRABMnn/pJaQ/cHG1NlZ594MLLM5f5ebSnV19
      kfcLUko8f+sFvlprslaLjUPPj+vGLK3W4uhgq0uz3dv0mSgSREKwst4gARbXGAAAHiNJREFU
      CCOqjTZhuPvUvp9+uMAfvfYJHdfn7333bQAu31rn6FSBpbUWpjH4yk/Nlbm12uQf//sPuXG7
      zr/9+VWuLddY2Wjz5edOMr8yyLH1w1gA/CBCSshlLDpuwEQpy1qjyxefPs6vPHuCRselks/Q
      7vrYpo5j7T7BSNM0stks+Xyeubk5JicnyeVyyQmQLo2iMFYnT7FIu90upWKJTCaDhkYQBknX
      dvWdj5uHykOYqEwkaouUEtd1EwFS1G3f92k0GrRaLdrtdnIdlcpZKBTI5/MJCS/Ndxpxg+r0
      ui2OPPZk8sqtpWXcXkg1aDL3+EzCDIQHFwnueQGREGzUWwSiw5njM4yezj0vwPXiRb9ea3Jn
      o4lpOTTavbhXmqYRGTphOEjcrrW6dNpdAqHh+gHVeouuG9Dq9DgxO7HtXL0gouP6LK41cL2A
      1VqbtVqHSzdXMXSdI5N5rty+g5EyCst5h/V6h5srda4tVWl2XOYmcqzerDNbyfPz84sEQUjH
      9fGDkOvLG7xx/haGrmHq8QPnHJNOz2eylCGfsTk/v0Ypb9Nx/SFh2y2UwagWdjabxbIsREMk
      DTLUOBg8S9qIhjhophYsQLlcJgojPH/g8TEMI3aNjrEllDoVBMFQGXa1wwsRt3Gt1+tDbNV0
      Ir6maVQqleTaKrocBAGdTmdcSmRAu+ViN5rAMQCe/ewL/TaTOlEUJr5VONhIcBhFGLqOlKDr
      Gu2uR6vbY26yTLVRR9M0em7AxESFMBJ4QUi5kGW93sax49rvhVyGdtel6wU4lokXRpTyGSIh
      0bT4UO+6AV3X58h0GSkh41h0XJ9yIUuj3SObsXC9kFqrR6WYwzKNTXMFeOP8Ej/54CZHp4q4
      fkSt7bHe7PHdn16Od1bHptn1yDgDym7GsWj1fE4dqfDJrQ06bkClkCUSNWw71sGvLNX48fvz
      5ByL7799ncfmysxW8mSc+A9dyDp0XB/LNHFsk3bXZ6qUo+MG2HvY/RU0Tdu0qys1RGUCptWM
      dPaVUmuUvaCEQbkxC4UCQS1I3KxRFGGZVvK3HudVGhdwg35MQh+cFEr10jQt4Rip5xmFep4x
      LZIEkdBwe92hVxVrD+6On7FXCCG5vrTOdLlAs9MjY1tIJEEQcWejgWUaBGGERJLL2PS8gJVq
      A13X6PQ82l2PiVIuiTgKIbH6CR+5jEOz04u/XM8lCEL8MOII5eT+kRBYpkEUxVFPw9Bod100
      TWO6Mp6peG25xtJai8lSlg+urZDPxgt0udqilHOwLT1elKZOGEU4loltGjQ6LidmiqzV4+/c
      tgz8UOBY8Z/m//7TdynnHU7MlMg6ZuLfV6pN1jFZrXeYLmWxTCOmZudj74tpjPe73w1s2x6q
      vDZkSKZeV6pPGmEYUq/XYzVIi8NhyqYQMvbURHukQqeN6XTsoNFoUKlUtt1wlbAYhjFqA2T5
      +l/4VaYrD6bWjeeHNDs9vCAg61j0PJ9ICLqejx9ETJbzuF7spgPl6zXo9DwyjpW4+wo5h07P
      Q9PTuqpOEEbJa0rzjIRIjESljkZCYvQrH+i6CuML2l1305wX15oIIfnhuzewLB2vr6Mrz0yr
      62EaOhnbxA+iZFGahk7GMam3vWSxKwRBhG3qCCm5tdrg/asrfHxjlXL/9HJsA7t/EmVsE9cL
      sSyDnGPS7HpYpoFlGkOCsh/I5mJCkVJZVLWIMAqHVKGtXJ29Xi9uwp0STBV1Nu4xDyDtjdpL
      dbpNd83kcvc8mb1ASsmdaoMoEqxUG+ScuLaLZRj4QYhtmmRsCz8I450/ihelocecEkPT8MOQ
      Yi5Dt+8Pz9gWXddHT9FyDV0jSHUbV/+GkehHQAeGUex2i70nmqbFHBixOaf1wvwa/8s/+CE9
      L+DMsYn/v71reY7jOO+/np7Hzj7xWDwIgDAJgaREUqJlUbJl5eVELrucOHa54rgqDx+d5JBD
      TrnkoKv/gxxyiiupyimuiitxYpfjZymKRVGUQookLAIkAIIgdoF9787OTHcOPd3bO7uLNyhL
      2l8Vi8BMz8xitr/u7/H7vg8Z10HLC2BbFNuVJkxqwA8YLNNAwhY7gmVSOJYZ/S92gIQtBEA2
      pWgHodrl/IDhpadnsVGsIZtyYBAC26RwbDGxUwkbtWZbHLNMMMbh2iZc24RjmUgnj69wWFfr
      1GgRYiEDOKIIcmQnsLCTRhm7h2xSLenVnIsapMfllSOEoNFo7CkEsppdbKa38A9//x3slEv9
      rzpGMCYytpqej1Y7wKNiZNEHAVrtAJQaCEIGSsUEDBkDpTq5iqj/g0goJIRuyECI+FmE4ztM
      RxGdhFrlhdehIwDS7gBEtxQ53ow+k8SN9zexXW1hp9pSK7IfhMi4NnZqLfz1117CTD4TTU5x
      3rYoLNOAaQqaQq3RVucMQtD0fHjRTgEAmaSNM9Mj8PwAGdeGZQnXphSaZMJEw/MF7UF7hmOZ
      MKmB83NjauxRIXX7uAEsfu/EjHUekf69SJJdGAr1VecKHSc45yJrMbIPdvtbugRg6dYdEJQQ
      2Lm+Fx0nKvUm6k0PlXoTY9kUWm0/ouECvh+oSU+IIV4ihzovV3YpBGGoT2yhvjDOYUSrt/Q0
      cC4msyR0GQZREzuM2oJKqGsJiWpjilr0YcynPjOeQbnegkkNUIOg4fkYzSTAGMep8TRc24Rl
      dVZssXoL/V/q7I5tRnYBxXd/fgev31xVk/gzF+dw5tQIOAe++ptPw7VNxfEBxG7X8gLYJoVt
      CeqBZVIkHBO2RTExksLf/skrx/KdxSerNJiFi5R0CQilVOQJg4CoihKdJJpOzgGBSc0uP/1R
      dwPGGCqVClqt1sCoMSFEJM/oB89dvIDZ2UWEjfKRPkAc0l/f9gOsbm6jUKphp1LHaDaFRuSu
      Y4yr1SJkgrstdEMS6eFEGUlCBeoIgTgm9D8OaMekroquaw2DCG549IXK5+uvSd7b0ASNUgNB
      bGudyWdQKDfh2EKtaQchvvXlFwBArdS2SZF0pAok9HI5ievNtlKLHItiIpdUKo1lGnAdS1Wr
      eGpmVKlOjmWCGgS2aWCn1kQqYSHpWMpLdWosrXaRw3iDBkHya3TIRaLfRGOcAQMSbIRAdOcX
      A1EmF2cD+5TtBukRMi1RmW43IQBicYDtYhmuQzEx3Sm7sfVoDdu1APmRFDyfYebU/juNSHjt
      AFvlbaRcB2nXQanahGEQWJTC98OuyQkmqhMbxO6oOaRjNEmd3IhsAKlTyhXb0ISCQBMe/Xr5
      OzUAXxjITH5J2rbcMfainrnU6NkBxnOu2gESjolWMcDEiMjAcmwaGawGRjOuUH2ogYxrIwgZ
      bItGk12oNW7CQsq1wLkUFBPJhAU7MpKloNgWxfR4GtPjaVgmheeH+PTFOTwu1dXOcGVxCmOZ
      4+/UYhiGigV0JcmjO6NMTl4CgIGrJBsJnWRnEEPZFnL3UGXZd1GR+mWcyd+pQeH7fldvg/g1
      PXGA7cebGJudBQ86TEUnkcSoBazceQfzl1/edyDMD0IUSjXk0i6CMEQmlUCl3kI6aSNkISg1
      QYjwwgBCXyeIAhwBAM6jYxyIfL5BEHReJOfRePllMPWulKuOM23LjTw9jCleunwtBiEIAmG4
      McJgEPG3SZVKrlIEQj2TfzfnHPmci0fbNZiURC5OhqQjVBFKgFTCUv7qyZEUKAFG0gkUKw1Q
      A6g0PBWxdSyKVLRTEHBYlGBmLAXHMtSxTNKCQYCEZWA2nwE1omcQjnRCCEcQBPjCiwvqOzrO
      IrUcXE3OeBkU/Zg+LQk65cj7Gad6NQgpQHtxhoDO99tvrGSDymJZ/dCTEXb3vTtYWXuIz335
      6+pYubSNkCZx/tmr8P06DGNs10DYTqWOSq0Jx7bgJhzsVBoIAx+jbhJBEMKKrjGj3ExAFM41
      ZfltZoBxwfewTBPUNJF2HRAiSFm2Ja5zEzbq9XoUphfnTBogDIXPX7gCTVhmAF9/rmnCTQiv
      z/R4DnfuP4JlSqIXgW2ZIG0uxjk2KJW7kwHbMtEI21EJD7GSPHNmEv/0g3dw4fQ4OAfGsi4S
      jo1s0kEy4eDlS6extlUBpRR/9dUXYdsW8pGak8+JnWJyNI1sqoSM6yivjevY+PMvfhL5rItm
      O4BJDViWiW9+4ZMIGYNpmvjc82dBbQsZVzSEG8mYcB2z53s5zgbWtmWj5XmgxOjLD9IT4uOQ
      O6x+me6T169RHVz6uFXlKk6i5bEf5H2DMMTjwhZkQmfKTYIxUfwrkUh0C8CXvvb1nhudPrM4
      8GXoKNeE269UbSCXTqJYrmF2ckTxbaSaYRgiLY1GrkzpqTEjQyoElFcn5driizdFrR8AyI9m
      4NgmTEoxkhHHkgkb1BDRVqmiLMxNgBoGHNtEqy1Kek+OZmBSimyKimuogVTChhlNaM45HNvG
      XEoEu/IjmciVGaLaaAmvUchQKNVQa4gCsk/NjGJ5o4TLZyeRH0kpavLESBKWaeDK4jSuLE6j
      Wq3i2QVRpGthdhTEIHBsEwszo+ofIQSF7RKenh8HpQamRoWApF0bz58TxbDGsh21Jpty4DED
      2VQnQPnFl/b3fR0WjuPAbDT6ngtZ2Fs5QoMeK5A7QTwJX3dFC68RB2dhV+EtxhkoodgrcEYi
      9530BlnURBAEItOs0UA2lzuelMhW20el1lQuRdMUk0b/gCbVjdCIZkspMkkRZZ7Oi5J2Ba8F
      xjhMSjGeS/dIvxwPQK3OsxMjMAwDjm0hkxLnZSzDdWyhZvEQ+dFOgE8ai/OnxlFretgsltUu
      kUyICeVE7kNKDZyeGkMQCl930/OFimMQJBOWcHVaFC9fmsPEiBDKb335BbhO/613Np/FbPT3
      fvsvXu2iV/Csi2//5ed7rvm7b/5W33vZJkUu1Xknf/jKhb7jjguyH5jk+EhwCA8P40z5jTk6
      8Ra5+kumqIwYS76PvLdSoaQAMabsACkoMni23zxhWaVCjpfV4orF4tEEgHOOjYKgJmTTLoql
      WhSBFF8oNQxhOLLOhKSGgdFsUiRrWCbmpkTlNnmNY5mYnUyqybcf7LYSUGogl04O7JIijeq2
      Hypjc9C4TtxACIncgBdnx2CZFPlcEvmcEIAL8/l9fXZ98h8G2ZSDv/njzxzpHgeF67pdAkCi
      QCGXP/OOnRVPqmFRcFEau5zzKJos7BQ900xWo6Yx+4CgIzyDIs9xyDG63crC8HA5wc1WG4VS
      Vaz89SZ2KnWYVHg4aKSyAIjUEguEAI5tYTov4gvZlDtwspkmRS59MjX6B0GoYHu/SMMwEARC
      PRvPpfH7L4vVdn4qdyjm5XFh0E5zUpC7gJ5txViouCRGZB8MyijTPTHSy8fCsCtjyw98YcAH
      oarwpl8j7xPP8NoL0q6QhvGey+za/XtohibGsq5ygzLOkbBt+EGIZMJGLeK7OLalAjHT41kY
      hoGJ0QwS0VPGsvsr0PSk4To25qfHsV3Zu6OJtFcoNZCM/PO/96mzkTfr4wPXdVVDCgCqWQaJ
      3NOEkS69XlaXkwhDwcvirNdOiL9LSauwLLuHzy/P71cdkrBtWzBK9xxJLSQsgpW7N2GlRgCI
      6GMyYWOn0kDSEfoypQYmxzKKSDeWE4bkQT/YB4WEY+FUfu8I+ORYRtkIEsmEhcwxcm4+DFBs
      ylgqJNe4+3p8QGeAKgidSY0xDEPFYaTRa1ADpmXCMq0eleqooHQfleESFkWLmcoNCjig1EDT
      a4MAyGWSYBH9QAaNPqzYz8tNJhxodvjHFoQQVXpQrcakWz2Jj+esN+prEBIFygzltqQGeoQr
      nlgv7QMZCD0MTGrC9Dxv164kTjKDKLcflmWhWq2q5me5pItGvQaHisTjQYgnIu+GD3rsR/H5
      zWbz0LU2d4NuDAuKt1hPRQW4PrEALVCpn+eMg9OOQ0KeM4xOf+IulYczVaRL5iIcdmfYszp0
      P8jMH1kpul+ETz92nGPj17ixope73V8fu1tUcj/j5NhUKtX3fPy6QWP3O+6gY/XxJ9W93TAM
      pNPprsVP3w301ZkQonz3+mquhIExMNLJJZb34px3uUeV0UtieQmHFIJD7R+yVMbjjVXsVBrw
      mjXsVGqwKPDwUUG1rLRtW/18XGP1cdyrYeneKqhtY319HbZt4/HaGqCNGzTWNE0UHj7sO1Y+
      3/caKJYqfZ8vx95bug0v4KiVt9DwAL9ZQbnmdf1Ncqw8tr6+DhMhlu+9j1aAI91z0Fj9ve43
      HfWgkIxK+bOc2NSgqsdwvwJauj9eh8r9jdoxBWGAtt9Wx7uoN7ybT3TYHeBIvrt6rQ7GQqQy
      I2B+Gw/XH4GF/YswncTYerUOBpGBlUi4CL06Cpvb6KfQHWjsvj9rG/VaG4xxjE3k0Kx5KJZK
      aFRqfcZ2kEi4MGwXFjy0vDhP5yD3PNzzjxtxFUWfjHI1H2Qb9LuXMpi5UI/aWmK8vIfOSVLH
      DsEePdLSkEyl4HkeqqUCHj7cxMREBqVyf1fiSYy1UynQYgntEChsrsP3J8BIgEa1gXQmeeix
      +/6sIUcqm0LL89CqFFDY4UiYbQRk99da2FwXfm9igzMfgKaCHuSeh3z+cYIQ0RK1UCwo+gKH
      ILPFmZfy/66JGkWNe5JjeKcuKQtD+NG9lDrHRVIVI+J32WLpwJ+fH0JsDton+CD9dD/osR/F
      5++3T/Bh4fs+tra2uncBo7sMuhSGkIU9vv/ONUQxO+PZXCropjFNdUPZNM2eWIN4XpTXPcBb
      dCgBGOLDh4M04D7MvQvFoqCaa4apHikGoIoL8D4JNfK8jr4JNtJAjlSkLsGI3PDUoMqNKvIS
      +EABGPYHGOLIkMlJ2KV+qELMBarODWCPSpUKvNt9Gg+sEXTyDkImco4N1nGjDmqYPBSAIY6M
      OBVhUC7AQGVDzFyQOKmRRFUntHt0xQW6TQbI1HzOOEIeIkSnO40ZTfX4LjMUgCGODL0JdZz6
      Ei9RPshfHxcgweXvPtcTXUanlZMUAZEXzpURLVWmkITqvA7j2rXX8Z1//Gc8eLiFg+DdWzcH
      HmtWd1Bt7q8W6BAffnDOVa1OGXiT/+QK3NNvQLtWUqOBjpCEYdhdTTpyebKY6iSYpwCJ8sZF
      RWwLlmXBtuwo29AEBhTfMl944Xn4bRvzUyl8/9//EykHWLj0NH7y45vIZwJc/d0/wJgrLqw9
      uoMfvfMYzz6ziNvvXkfbY1iYn8S95VU0fWDjwW20PYZTTgXeqRfx+n//B1JJE3OXPoX//cEP
      kUtRfPLzf4TJJ8t2HuKEEexCSVYcfjnJifDty/wPmderq0iC/dkd6JIruu4BktD3k0G7DGcM
      vM/O0xGJVgnJqUW8dOUprG+UcPbcM3huYRpbVU8NSU0+hfkxBw9W1zAzv4BPPf8sVpeXwQDs
      7BTVMQMAghrckXm8dPUZbKxu4fTZRTx37hTqh+8MNMSvKVgs6X5QlJdFBQl0/o5UY+ITdzfm
      5yBbQhrFckfS/3V2qaBLWE3AxNzcKSA1g0nnOm7cN/DCpSn8y3ffgn3xDBbIDq5duwUAGB8b
      RwAD01MTmB2x8ca1d/GJ6SlsbJVw5uxZnJ3M4I1r7+Li/Gk4mTH4I2u4/t4Wrl59Fo/WHiOd
      COAMmZQfOUgbQNfhBybFa1D2AQNCHqryN/04//3u1SMgHGBgKl2y53OyEIQRELPDHeofBwhq
      WH3s4/RMb038IT6cOMk4wFahgHCf/R8k4iqTnlAP9I8JqGgyutWe+O+IYgF69NlJiK6RXsvr
      Cp4NyEtM4/TMgf6eIT6miNcA2m0cMFitkZXleJRMj5hrVeYZy+jvIBtAPKxTa0hVmQhC+IGv
      qkzIc8M+wUMcCVK33u2YniHWj56tU6i1/7pWfZlrIMvbS7eoSreM0S4Y5110Cll5QrlLI4Eb
      xgGGOBIGcXYk9svS1HeIbnWHw4DmQo30HelVkvnCOkeoEygj6jgXBkJPhtlQAIY4EmQlh3iP
      MKBXz98v+qlJepIMCLoEBNFPcu/g+j0iQSAg4Fq+sbx+qAINcSTIzu86N/8g2M8OIe/dVT+U
      Rf8E102pPT3Qkm9oVJRL9yANd4AhDg3OudCtCfq6HvvRF/Tfddtgt4wuveGG/B0RU0L0f4jf
      PwqZDbivzikaCsAQh4ZciXW9PH4+rtN3nUeM3LaP5+n5vwYh0e6g5RJruciySRNBf7uEMQZz
      UMnAIT68oJQimTx5voksux7v7qJP6t3sgHjSvL4jyGNx6EkwAEAJ7bpG1++Ft4d09R6QXiMe
      Ro00MpkMGpVtPNxuYPHMXNfDHj64hwaze47v+WLaDdxdeYRnzi8ACFApe8jmBleFa+xsYflR
      Ea12iBeuXDrQsz5u4Jzjzp07uHDhAgqFThqirIWfTqcH1sM/KUif+l6+/r2gM0r1IJYeYe5b
      Lh0d1UryiKT6o3ek1wVUFWgGgBtvXUdudgHLS++BOwk8XlnF7Pnn8N6tW1i8+Bz+52evY3ou
      jzanKG2sIjc+hXKLwaU+glYd4xMzKHsBgvImJs9cwvs3r+PqZ1+J7gcs/fxtlPLnsJBtYmJ6
      DvU2R+hto7HTwOz557B+/x4+8+kL+J9fPMTdmzcAdwznF04f6iV+1FEoFLC6ugpCCKamprCx
      sYH79+/j5ZdfxptvvomrV69idPTJRPAtyxqo58dp0ftF3J+v84oG2QoGIWByx+lKlI+qU5P+
      n4kxBvraa6+9Bh7izevvYu39Wyg2asi4WVR3fJguxZXLT+H+2hbu3XwLa8UycpkM7l5/G6lT
      cwgaJSy9cw2PGwTjoy5Wlx8hMAhco41CtY0bb/wUxUYL+fQYWkYCNmXYuHcTd9eKSLs+DJJE
      dccHjDbm5vJYW62iWFhFpdlANpFAMyQ9ZQg/7nAcB4VCAdPT07hx4wbGx8fBGMPa2ho8z0Mm
      k+krAKL16/GbfIQQ1YNrL/6PvkOoNqp69BfduwDQTYnYTaCUfYDYzkG6r+0i3A3kAj1hPLr/
      KyQmz2DEHdrkJ4WT4gKFYYhCodCjAslJprdnikeH1aSETHHsdAA9CPRWWP3csUJtMvrmIpvx
      RgcfBEam5gAEaLWGSTTHAVmE60lANy7j6gsQVWaQTfWiWSrdmPL6TqkTDh65NaWxKrMC9hKK
      eK6w7v1RvQpilfU45zAZY9h+vI5HJQ8Xzy8MfMDy0m1Mzi8i5fR5sTzAw41tzMxMolKpIJvN
      AuBYun0b84sX4JjDeNtxgXOOu3fv4ty5c9jc3ES73UYQBJicnESxWMTU1FT0/p8MJCVhPyqQ
      3h41njMgXaKylIokv0mxkbVA+4J3rpfP6QiQuJekU8jPKncNEwBuv3cL2yUfqRRFtRagXdmE
      ncyh7XNMTozi1FQaN26u4HJtE3eak3j1ygzevrWM4qP3cfWVz6Py8B5WilX84ic/wGh+GuNT
      p/DsJ3K4ufIYtc330Zx8Hp99ZvbIL3sIoF6vY319HZlMBisrKzh37hxKpRKWlpawubmJqamD
      t7E9KmzbVqu88sdH6BcbiDft041cvfBVV0KYViir306j0yP65hfHxst+Bh2RClq49stf4lfL
      q2iFBOVKFZfOjuH1t+6AcgvTEzY2Sj5MwrCxvIQf/vgXyOYnAAC1Vgs7hRLy+VFYTgp+owZu
      pTFh11DybZABhZCGODhkt5RWq4WpqSksLS2h0WjA8zykUik8ePDgiX+m/fr95dgwDNW/QZHi
      nqgyoqrQ0TPiblKZTBNPztcrTMdBKQWp1+sDZ2e1tIWyZ2BuanzvtzDErw0sy+qJBZxkQgxj
      DOVyuavMvj6xd2OMDhKcXakRynjePXVyPyBBEAyX548Y+uXknqQAAFC7kBSCeA6ADlEhLuxN
      gtEKXe3W+OKw3qJ+IJxzvnzrGlKnn8PK7bfx0osvqpOrD9Zwel5EgcuVMnLZHNaWl7DTIpif
      nUAuG7UUYm2U6yEyDsO1W8u4MDuGmw8KuLT4CYT1CqzJ00ibwP+9/Sayk6cxkkoim9tf/csh
      uhEEAa5du4aLFy/CcRysrKzA8zzk83k8ePAAly9fRirVG3U/aQGQCMMQpVIJvu93JcDok1VG
      jiVXXzS86E6EEeNJV31RHYcNtMVhAsBmuQr6+Ee4vUPhV76H0EighBG0N26hevkyfvTTNzA+
      lcdv/86r4o8zk/j+v/0rvvS1P8NbP/keWoSg1BrHN77yG2g3a7i5VMIIMfDd//o+zucy2PDv
      4NUvvIqdnSIMx8bPfraMP/3GV4784T+OaLVaqFarqFQqqFQqCMMQ5XIZhBCcOXMGa2truHDh
      ZHsF7wZKKUZHR1GuVOC1WgMnaRSEUjSGuFok0G0JS7fooNVfBdgOEIn+f9DH5YI3ldcaAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALSUlEQVR4nO3dS2xc1R3H8d+5987DY489Gb/yTuy0KiY8RCBBhaqCplJR1UClbouqtot2
      00isKBWVWqmLbKoWUQlV6qYPQZUFVIBIoDyCmoQUF8ijmJA6iYkdJ3YcP2LPzJ25957ThQER
      8mDsmTtnov/vs0kkx3P/Vubrc18zo4wxBkRCObYHILKJAZBoDIBEYwAkGgMg0RgAicYASDQG
      QKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQG
      QKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQG
      QKIxABLNsz0AyVWpVOD7PsIwhDEG+XweMzMzyOfzmJ6ehuM4UEqho6Mjthm4ApA18/PzOH36
      NAqFAoaGhlAsFnHixAmMj49j3759GBoawrFjx2CMiW0GrgBkjTEGo6OjOH/+PPr6+qCUwsTE
      BIrFIi5evIh8Pg/Hifd3tDJx5kV0HcViEaVSCZ7nQSmFlpYWzM3NIZfLwRiDKIqglEIqlYpt
      BgZAonEXiKx64403UCqVkM1mkUqlkMvl0NvbC9/3YYxBZ2cnEolEbNtnAGRVOp1GJpNBEARw
      XReTk5M4cuQIstksXNfF9u3bY90+d4HIqrNnz6JQKKC1tRVBECCfz2N+fh7z8/NYvXo12tvb
      Y90+A6CmY4yG8QvQxQpMpQJTLkP7ZYy0dCKd8pBKuEgmPGRSHlpSte0eMQCyShcuIDp/DPri
      SejZM9DTJ2HmziKYAuY/WA9oA2gNA2Bn/4MAAMdRcJSC6yh0tKWxpiuL3nwb1na3Y+PKDmxa
      nUcmXV0YPAaghjL+HMLRtxGNDSIaG4SeHgF0cJV/mQLCEIC64itaG2gYhBEwOVPA5Ezhsq+n
      kx42rV6BW/p7cEtfD25a34Vkwr3qPFwBKHYmKCI8vR/hib0IPzoAVApf+D264mHuvQF8EsBn
      V4ClyrWl8dXNa/H12zfgK+s74X7m4hoDoNhE06cQHH4a4YmXYUozS/peY4DZt29FPQL4hFLA
      6q4s7r+jDw9s24RsJsUAqL6MMdDnj6Lyzl8QnnwN0OGyH2v23QGYYHFfvh4BfFYmncD2LX08
      BqD6ic4dRfnAE4jGBgGja348JxEiCuK5CFb0A7xw8AQDoNoZfxbl/U8geP8f1zigXR7lLX/1
      qBYDoGUzOkQw9DzK+38HLHEfvxpOsn4xXQsDoGXRhQvwX/01olP7YtuGSnAFoCYUnjkE/5Vf
      wsyfi3U7jhfF+vgAA6AlMDpC5dBTqAz+qaazO9XiCkBNw4Q+/H/+CuHxFxu2TQZATcH4cyjt
      eRTRyP6GbtdJBFi8AnDl7RD1wgDounRhCqXnd0KfP9rwbSseA5BNujSL0nM/hb5w3Mr2F1eA
      mLcR+xbohmQCH/4LO609+QFAOYBy410FGABdwYRl+HsfRXT2XdujxH4gzADoMsYYlP/1W4TD
      r9keBQDgJBkANYgxBuHxFxEcftr2KJ9SLgOgBtHTp+C//hvbY1yGu0DUECYowd/7WFWv1mok
      7gJR7IwxKB98EnpyyPYoV3BiviWaARD05AcIDj9je4yr4i4QxcroEOV9u+r6QpZ6chIhFm+H
      iOnxY3tkuiGEH7yIaNz++f5rUTFfDWYAgpnyPMoHn7Q9xnU53AWiuAT/fRZmYcL2GNelXAM4
      tb/A/loYgFAmKKLy7l9tj1GVOFcBBiBUcPwlmIXztseoSpxnghiAQCYKELz3N9tjVC3OawEM
      QKDo3BHoi8O2x6iaSsR3SzQDEMYYg+D952yPsSRxvjCGAUgTlBDG+F4+ceAxANVNeOYQ4M/Z
      HmNJeBaI6sIYg/DEHttjLBlXAKoPHSAae8f2FEvGFYDqQs98BFOYtD3GksV5PxADECQaG7Q9
      wrIoVwMqnjtCGYAQxhhEY/+xPcayxXUcwACkMBqRxff4qVVcV4MZgBShDzN/Y9z783lKcQWg
      Gun5c0BUsT3GssV1JogBCKFnRmyPUBOuAFQTMztqe4SaxHU/EAMQwpRmbY9QE64AVBMTNNcb
      Xi1VvY8BXERoU0V+PoAUJijZHqEmKhECVR/DG3iIkFE+2p0COp1L6HZn0eleQrcziy73ElY4
      l5BRZQYgRpO95eFSXb4CGCQRoNXxkXMW0OXModOdQ/fHf3Y5c8g5C8g4ZSTV9VcOBiCECX3b
      I9TE8UI83PoyVroX0eXOIeuUkFE+PFXbO0YwACGU12J7hJooBXwrU/97mXgQLEUyY3uCpsQA
      hFCprO0RmhIDEEIlbuxdoLgwACFUpsv2CE2JAQjh5Ptsj9CUGIAQTm697RGaEgMQQrV2A8k2
      22M0HQYghZuA077K9hRNhwEIoZQDp2ez7TGaDgMQxFu31fYITYcBCOKuucv2CE2HAQiisr1Q
      PBt0GQYgiHI8eGu32R6jqTAAYRI3P2h7hKbCAIRxVt4Gldtge4ymwQCEUa6HxJe+aXuMpsEA
      BPJu+jag+F8PMACRnK4vw113t+0xmgIDEEgpB8mtP7Y9RlNgAEK5a7fCWXmb7TGsYwBCKcdF
      8q4f2h7DOgYgmNd/H5zeW2yPYRUDEEy5CaTv+zmgXNujWMMAhHNW3Y7E5odsj2ENAxBOKYXk
      PTuhWlbYHsUKBkBwWruQ/NojtsewggEQACCx+bvwbvqO7TEajgEQgMWLY+lvPA61YqPtURqK
      AdCnVKoNLQ/sAtyU7VEahgHQZZzezUjd/wsxN8vJ+CmpakopJG/9HpL37rQ9SkMwALqq5F0/
      QuLOH9geI3YMgK5KKQepex+BN7DD9iixUsYYY3sIal4mClF+cxeCI3+3PUosGAB9IWM0Koee
      QuXffwRMbZ/J1WwYAFXFGIPg6G6U9+0CdDyf2m4DA6AlCUffhr/3MZiFCduj1AUDEC6KIhw4
      cAB9fX0YHh5Gf38/lFLI5/N466230NXVhYmJCfT39yOZTGLjxo3QhSn4rzyOaGS/7fFrxrNA
      wk1NTWFiYgLj4+OoVCro6elBsVhEW1sbVq1ahYGBAfT09GDTpk0olRY/bd5p7ULLQ39A8p6f
      AW7S8k9QGwYgXC6XQy6Xg+d5UErh1KlTGB4ehtYa6XQajuOgs7MTo6OjOHnyJLRePAhWjofU
      3T9B5vvPwt1wDwBl9wdZJu4CUc2MMQj/9wrK+38PMzdqe5wlYQAEYPFJPDo6inw+j1KphO7u
      bszOzqKjowNKVffb3fiXUDnyDILDz8AUp2KeuD4YAAEAtNbYvXs31q1bB8dxPn3yt7e3o1Kp
      YMuWLVU/lqkUEHy4B5V3/gwzczrGqZdJOXDX3InklocZAC3SWmNwcBAXLlxAOp3GwYMHsW3b
      NkxPTyObzWLHjqXfEmGiAOHJ1xF++BLCkf1AWI5h8uqpljy8TffDu/khuKvvgFKKAVBj6IVJ
      hMOvIvxwD6KJ94Go0pgNJ1vhrbsb3sAOeBvvhUpkLvsyA6CG04UpROeOIhobRDQ2CD19Gojq
      sTooINkKt2cA7rqtcNdshds7AHWdj4dlAGSdLk7DzJ2Bnh2Fnj0DPTMCfWkcqBRhKgswQRHQ
      IQBAeWkg2QqVyECl2uB0rIWzoh9qxYbFv3esue4T/vMYADU9Y8zHu0xmMYA6YgAkGq8Ek2gM
      gERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgM
      gERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgM
      gERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgET7P4Q0v+NiEATAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Gender_bar' width='192'>
      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
      Ih/9rQ0caU9SUVmB33l9lBASI0NKApCIRTEDxTy4+lGKP1IjI3S+E1/1n/PQgsIr616o452D
      Me55/L9gC9aweX8DRUunEo1G0DQdPXKRIw3N+Eqr8cnGLz6nlHSBkglQTAce9/DlRl8vzuys
      Yct62nrJmTaJXI+D7IlTyTUihHV98JloO7aPaHolpWN9yOYvPq/U1AlOdtOw5122792LP6OE
      +bfdzvRCL32d7ex+/585vslOzri5/Ie7ZhOL2/FnOrhUJ9hNeixEt2lAbwvvbHkbo2QOD91f
      yODOX9f1YTWBTdPENE3i8Xgq3uofnXGd1DuORqKghlPdjKuWkgD48qbw4DefwTQN+s81sGfv
      dryeO5mw4FH+500mph6ltW4Tb27LZVGmQTSmAyYYSaLuNAoUhd5AEUvvnU3s1FYOn+7jptIA
      dgVUVcX5kfq1o65OsM3O9RBll8uF4nZ/9orXuZR0gaI9bbRdiKBoDtK8AdLcKgk9QvvpIANJ
      BbvDRSAnE1skhifbRkdTG/1xnYFzpzhrOPCqGqCiaW7Kqxehn/qQ5vMhTK7UBf60esEj/ee6
      6ecpI/9vCqk6C6RHaNyzk80X+jE0DxOr5lOU7qD73Fk2/WorvdEkdl8+824rIT09ztTmHfzq
      X34CzgDlN94yrE6w3VdIZel59tbXk+WrItMzOsqhimsjJXWCTUMnHo0QTSRBseH2eLDbVEw9
      TiQUIWmAaneR5nGiKiZGIsZAOAaaHbfbhU1T0JNJQMNmUzD1JLGEgd3hQFOlTvC1IHWCr+aF
      VQ2nx4vz48s1B2l+x8eXotpd+AOuYUttNvtHHmdHCsSLL0K+CRaWJgEQliYBEJYmARCWJgEQ
      liYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWlpoK
      MeEudr+zlh0NfdjUK3WCMxJt7NjwWw62RsmetpD7b5+JR4nRfmQn67YcQPePY9FtS5le7OHU
      yUY0bSzjxvm5ePowRy6o3FBVKXWCxefy/wEGIX4a9NgBxQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rides' width='192'>
      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
      KgqMfoFdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Subscribers' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Subscribers_bar' width='192'>
      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
      r1j4W5Ik6f8DnZcdz0riXbgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top_station' width='192'>
      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
      IzuZAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
